{"version":3,"file":"websocket-components.js","sources":["../src/web-components/websocket-status.tsx","../src/web-components/websocket-handler.tsx"],"sourcesContent":["/**\n * WebSocket Connection Status Web Component\n *\n * A minimal web component that displays the current WebSocket connection status\n * with a colored indicator (red/yellow/green) and optional text.\n */\n\n/* @jsxImportSource solid-js */\nimport { customElement } from \"solid-element\";\nimport { createSignal, createEffect, Show } from \"solid-js\";\nimport { ConnectionStatus } from \"../lib/websocket-types.js\";\n\nexport { ConnectionStatus };\n\nexport interface WebSocketStatusProps {\n  status?: ConnectionStatus;\n  showText?: boolean;\n  userCount?: number;\n  showUserCount?: boolean;\n  compact?: boolean;\n}\n\nconst WebSocketStatus = (props: WebSocketStatusProps) => {\n  const [lastStatusChange, setLastStatusChange] = createSignal(Date.now());\n\n  // Create reactive getters with defaults\n  const status = () => props.status ?? ConnectionStatus.Disconnected;\n  const showText = () => props.showText ?? true;\n  const userCount = () => props.userCount ?? 0;\n  const showUserCount = () => props.showUserCount ?? false;\n  const compact = () => props.compact ?? false;\n\n  // Watch for status changes and dispatch events\n  createEffect(() => {\n    const currentStatus = status();\n    setLastStatusChange(Date.now());\n\n    // Dispatch custom event when status changes\n    const event = new CustomEvent(\"status-change\", {\n      detail: {\n        status: currentStatus,\n        timestamp: lastStatusChange(),\n      },\n      bubbles: true,\n    });\n\n    // We'll dispatch this on the host element\n    setTimeout(() => {\n      const host = document.querySelector(\"websocket-status\");\n      if (host) {\n        host.dispatchEvent(event);\n      }\n    }, 0);\n  });\n\n  const getStatusText = () => {\n    switch (status()) {\n      case ConnectionStatus.Disconnected:\n        return \"Offline\";\n      case ConnectionStatus.Connecting:\n        return \"Connecting...\";\n      case ConnectionStatus.Connected:\n        return \"Online\";\n      case ConnectionStatus.Error:\n        return \"Connection Error\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  const getIndicatorClass = () => `status-indicator ${status()}`;\n  const getTextClass = () => `status-text ${status()}`;\n\n  return (\n    <div\n      style={{\n        display: \"inline-flex\",\n        \"align-items\": \"center\",\n        gap: \"8px\",\n        \"font-family\":\n          '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n        \"font-size\": \"14px\",\n      }}\n    >\n      <style>{`\n        .status-indicator {\n          width: 12px;\n          height: 12px;\n          border-radius: 50%;\n          border: 1px solid rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n\n        .status-indicator.disconnected {\n          background-color: #ef4444;\n          box-shadow: 0 0 4px rgba(239, 68, 68, 0.3);\n        }\n\n        .status-indicator.connecting {\n          background-color: #f59e0b;\n          box-shadow: 0 0 4px rgba(245, 158, 11, 0.3);\n          animation: pulse 1.5s infinite;\n        }\n\n        .status-indicator.connected {\n          background-color: #10b981;\n          box-shadow: 0 0 4px rgba(16, 185, 129, 0.3);\n        }\n\n        .status-indicator.error {\n          background-color: #dc2626;\n          box-shadow: 0 0 4px rgba(220, 38, 38, 0.5);\n          animation: blink 1s infinite;\n        }\n\n        @keyframes pulse {\n          0%, 100% {\n            opacity: 1;\n            transform: scale(1);\n          }\n          50% {\n            opacity: 0.7;\n            transform: scale(1.1);\n          }\n        }\n\n        @keyframes blink {\n          0%, 50% {\n            opacity: 1;\n          }\n          51%, 100% {\n            opacity: 0.3;\n          }\n        }\n\n        .status-text {\n          color: #374151;\n          font-weight: 500;\n        }\n\n        .status-text.disconnected {\n          color: #dc2626;\n        }\n\n        .status-text.connecting {\n          color: #d97706;\n        }\n\n        .status-text.connected {\n          color: #059669;\n        }\n\n        .status-text.error {\n          color: #dc2626;\n        }\n\n        .user-count {\n          color: #6b7280;\n          font-size: 12px;\n          margin-left: 4px;\n        }\n      `}</style>\n\n      <div class={getIndicatorClass()} />\n\n      <Show when={showText() && !compact()}>\n        <span class={getTextClass()}>{getStatusText()}</span>\n      </Show>\n\n      <Show when={showUserCount() && userCount() > 0 && !compact()}>\n        <span class=\"user-count\">\n          ({userCount()} user{userCount() !== 1 ? \"s\" : \"\"})\n        </span>\n      </Show>\n    </div>\n  );\n};\n\n// Register as custom element\ncustomElement(\n  \"websocket-status\",\n  {\n    status: ConnectionStatus.Disconnected,\n    showText: true,\n    userCount: 0,\n    showUserCount: false,\n    compact: false,\n  },\n  WebSocketStatus\n);\n\nexport { WebSocketStatus };\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"websocket-status\": {\n        status?: ConnectionStatus;\n        showText?: boolean;\n        userCount?: number;\n        showUserCount?: boolean;\n        compact?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n","/**\n * WebSocket Message Handler Web Component\n *\n * A web component that manages WebSocket connections, handles incoming messages,\n * and provides methods for sending messages. Integrates with the WebSocket client\n * and provides a simple interface for media blob handling.\n */\n\n/* @jsxImportSource solid-js */\nimport { customElement } from \"solid-element\";\nimport { createSignal, createEffect, Show, For } from \"solid-js\";\nimport { ConnectionStatus, WebSocketStatus } from \"./websocket-status\";\nimport \"./websocket-status\";\n\n// Import types from the client library\nimport { MediaBlob } from \"../lib/websocket-types.js\";\nimport { WebSocketClient } from \"../lib/websocket-client.js\";\n\nexport interface WebSocketHandlerProps {\n  websocketUrl?: string;\n  autoConnect?: boolean;\n  showDebugLog?: boolean;\n}\n\nconst WebSocketHandler = (props: WebSocketHandlerProps) => {\n  const websocketUrl = () => props.websocketUrl || \"ws://localhost:3000/ws\";\n  const autoConnect = () => props.autoConnect !== false;\n  const showDebugLog = () => props.showDebugLog || false;\n\n  // State\n  const [client, setClient] = createSignal<WebSocketClient | null>(null);\n  const [status, setStatus] = createSignal<ConnectionStatus>(\n    ConnectionStatus.Disconnected\n  );\n\n  const [debugLog, setDebugLog] = createSignal<string[]>([]);\n  const [mediaBlobs, setMediaBlobs] = createSignal<MediaBlob[]>([]);\n  const [errorMessage, setErrorMessage] = createSignal<string>(\"\");\n  const [userCount, setUserCount] = createSignal<number>(0);\n  const [isDragOver, setIsDragOver] = createSignal<boolean>(false);\n  const [isUploading, setIsUploading] = createSignal<boolean>(false);\n  const [uploadProgress, setUploadProgress] = createSignal<string>(\"\");\n\n  // Auto connect effect\n  createEffect(() => {\n    const shouldAutoConnect = autoConnect();\n    const url = websocketUrl();\n    if (shouldAutoConnect && url) {\n      connect();\n    }\n  });\n\n  const log = (message: string, ...args: unknown[]) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logEntry =\n      args.length > 0\n        ? `[${timestamp}] ${message}: ${JSON.stringify(args, null, 2)}`\n        : `[${timestamp}] ${message}`;\n\n    setDebugLog((prev) => [...prev.slice(-99), logEntry]); // Keep last 100 entries\n    console.log(\"[WebSocketHandler]\", message, ...args);\n  };\n\n  const updateStatus = (newStatus: ConnectionStatus) => {\n    if (status() !== newStatus) {\n      setStatus(newStatus);\n      log(`Status changed to: ${newStatus}`);\n\n      // Dispatch status change event\n      const event = new CustomEvent(\"status-change\", {\n        detail: { status: newStatus },\n        bubbles: true,\n      });\n\n      setTimeout(() => {\n        const host = document.querySelector(\"websocket-handler\");\n        if (host) {\n          host.dispatchEvent(event);\n        }\n      }, 0);\n    }\n  };\n\n  const setError = (message: string) => {\n    setErrorMessage(message);\n    log(`Error: ${message}`);\n  };\n\n  const clearError = () => {\n    setErrorMessage(\"\");\n  };\n\n  const connect = () => {\n    if (!websocketUrl()) {\n      setError(\"WebSocket URL not provided\");\n      return;\n    }\n\n    const currentClient = client();\n    if (\n      currentClient &&\n      currentClient.getStatus() === ConnectionStatus.Connected\n    ) {\n      log(\"Already connected\");\n      return;\n    }\n\n    clearError();\n    updateStatus(ConnectionStatus.Connecting);\n    log(`Connecting to ${websocketUrl()}`);\n\n    try {\n      const newClient = new WebSocketClient({\n        url: websocketUrl(),\n        autoReconnect: true,\n        debug: props.showDebugLog || false,\n      });\n\n      setClient(newClient);\n      setupClientListeners(newClient);\n      newClient.connect();\n    } catch (error) {\n      setError(`Connection failed: ${error}`);\n      updateStatus(ConnectionStatus.Error);\n    }\n  };\n\n  const disconnect = () => {\n    log(\"Disconnecting...\");\n\n    const currentClient = client();\n    if (currentClient) {\n      currentClient.disconnect();\n      setClient(null);\n    }\n\n    updateStatus(ConnectionStatus.Disconnected);\n  };\n\n  const setupClientListeners = (wsClient: WebSocketClient) => {\n    // eslint-disable-next-line solid/reactivity\n    wsClient.on(\"statusChange\", (newStatus) => {\n      log(\"Status changed to:\", newStatus);\n      updateStatus(newStatus);\n      if (newStatus === ConnectionStatus.Connected) {\n        clearError();\n      }\n    });\n\n    wsClient.on(\"welcome\", (data) => {\n      log(\"Welcome received\", data);\n    });\n\n    wsClient.on(\"mediaBlobs\", (data) => {\n      log(\"Media blobs received:\", {\n        count: data.blobs.length,\n        total_count: data.total_count,\n      });\n      setMediaBlobs(data.blobs);\n\n      // Dispatch event\n      const blobsEvent = new CustomEvent(\"media-blobs-received\", {\n        detail: {\n          blobs: data.blobs,\n          totalCount: data.total_count,\n        },\n        bubbles: true,\n      });\n      setTimeout(() => {\n        const host = document.querySelector(\"websocket-handler\");\n        if (host) {\n          host.dispatchEvent(blobsEvent);\n        }\n      }, 0);\n    });\n\n    wsClient.on(\"mediaBlob\", (data) => {\n      log(\"Single media blob received:\", data.blob.id);\n    });\n\n    wsClient.on(\"error\", (data) => {\n      log(\"Server error:\", data.message);\n      setError(`Server error: ${data.message}`);\n    });\n\n    wsClient.on(\"connectionStatus\", (data) => {\n      log(\"Connection status update:\", data);\n      setUserCount(data.user_count);\n    });\n\n    wsClient.on(\"parseError\", (error) => {\n      log(\"Parse error:\", error.message);\n      setError(`Message parse error: ${error.message}`);\n    });\n\n    // eslint-disable-next-line solid/reactivity\n    wsClient.on(\"rawMessage\", () => {\n      if (showDebugLog()) {\n        log(\"Raw message received\");\n      }\n    });\n  };\n\n  // Public API methods using WebSocketClient\n  const ping = () => {\n    const currentClient = client();\n    if (currentClient) {\n      const success = currentClient.ping();\n      if (!success) {\n        setError(\"Failed to send ping\");\n      }\n      return success;\n    }\n    setError(\"Cannot ping: not connected\");\n    return false;\n  };\n\n  const getMediaBlobs = (limit?: number, offset?: number) => {\n    const currentClient = client();\n    if (currentClient) {\n      const success = currentClient.getMediaBlobs(limit, offset);\n      if (!success) {\n        setError(\"Failed to request media blobs\");\n      }\n      return success;\n    }\n    setError(\"Cannot get media blobs: not connected\");\n    return false;\n  };\n\n  const getMediaBlob = (id: string) => {\n    const currentClient = client();\n    if (currentClient) {\n      const success = currentClient.getMediaBlob(id);\n      if (!success) {\n        setError(\"Failed to request media blob\");\n      }\n      return success;\n    }\n    setError(\"Cannot get media blob: not connected\");\n    return false;\n  };\n\n  const uploadMediaBlob = (blob: MediaBlob) => {\n    const currentClient = client();\n    if (currentClient) {\n      const success = currentClient.uploadMediaBlob(blob);\n      if (success) {\n        log(\"Sent UploadMediaBlob message\", {\n          blob_id: blob.id,\n          blob_size: blob.size,\n          blob_mime: blob.mime,\n          blob_sha256: blob.sha256.substring(0, 8) + \"...\",\n        });\n      } else {\n        setError(\"Failed to upload media blob\");\n      }\n      return success;\n    }\n    setError(\"Cannot upload media blob: not connected\");\n    return false;\n  };\n\n  // File upload helpers\n  const calculateSHA256 = async (file: File): Promise<string> => {\n    const buffer = await file.arrayBuffer();\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  };\n\n  const fileToBlob = async (file: File): Promise<MediaBlob> => {\n    const sha256 = await calculateSHA256(file);\n    const arrayBuffer = await file.arrayBuffer();\n    const data = Array.from(new Uint8Array(arrayBuffer));\n\n    return {\n      id: crypto.randomUUID(),\n      data,\n      sha256,\n      size: file.size,\n      mime: file.type || \"application/octet-stream\",\n      source_client_id: \"web-component\",\n      local_path: file.name,\n      metadata: {\n        originalName: file.name,\n        lastModified: file.lastModified,\n        uploadedAt: new Date().toISOString(),\n      },\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n  };\n\n  const uploadFile = async (file: File) => {\n    if (!file) return;\n\n    setIsUploading(true);\n    setUploadProgress(`Preparing ${file.name}...`);\n\n    try {\n      log(`Starting upload for file: ${file.name} (${file.size} bytes)`);\n\n      setUploadProgress(\"Calculating SHA256...\");\n      const blob = await fileToBlob(file);\n\n      setUploadProgress(\"Uploading to server...\");\n      log(\"Uploading blob:\", {\n        id: blob.id,\n        size: blob.size,\n        mime: blob.mime,\n        sha256: blob.sha256.substring(0, 8) + \"...\",\n      });\n      const success = uploadMediaBlob(blob);\n\n      if (success) {\n        setUploadProgress(`✅ ${file.name} uploaded successfully!`);\n        log(`File upload successful: ${file.name}`);\n        setTimeout(() => setUploadProgress(\"\"), 3000);\n      } else {\n        throw new Error(\"Failed to send upload message\");\n      }\n    } catch (error) {\n      const errorMsg = `Upload failed: ${error instanceof Error ? error.message : String(error)}`;\n      setUploadProgress(`❌ ${errorMsg}`);\n      setError(errorMsg);\n      log(\"Upload error\", error);\n      setTimeout(() => setUploadProgress(\"\"), 5000);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleFileSelect = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    const files = input.files;\n    if (files && files.length > 0) {\n      Array.from(files).forEach(uploadFile);\n    }\n    // Reset input\n    input.value = \"\";\n  };\n\n  const handleDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    const files = event.dataTransfer?.files;\n    if (files && files.length > 0) {\n      Array.from(files).forEach(uploadFile);\n    }\n  };\n\n  // Expose methods for external use\n  const exposeMethods = () => {\n    const element = document.querySelector(\"websocket-handler\");\n    if (element) {\n      Object.assign(element, {\n        ping,\n        getMediaBlobs,\n        getMediaBlob,\n        uploadMediaBlob,\n        uploadFile,\n        connect,\n        disconnect,\n      });\n    }\n  };\n\n  // Expose methods after mount\n  createEffect(() => {\n    setTimeout(exposeMethods, 0);\n  });\n\n  const formatFileSize = (bytes?: number): string => {\n    if (!bytes) return \"Unknown size\";\n    const units = [\"B\", \"KB\", \"MB\", \"GB\"];\n    let size = bytes;\n    let unitIndex = 0;\n\n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  };\n\n  // Cleanup on unmount\n  createEffect(() => {\n    return disconnect;\n  });\n\n  return (\n    <div\n      style={{\n        display: \"block\",\n        \"font-family\":\n          '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      }}\n    >\n      <style>{`\n        .container {\n          padding: 16px;\n          border: 1px solid #e5e7eb;\n          border-radius: 8px;\n          background: #f9fafb;\n        }\n\n        .header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 16px;\n        }\n\n        .title {\n          font-size: 18px;\n          font-weight: 600;\n          color: #111827;\n        }\n\n        .controls {\n          display: flex;\n          gap: 8px;\n        }\n\n        button {\n          padding: 6px 12px;\n          border: 1px solid #d1d5db;\n          border-radius: 6px;\n          background: white;\n          color: #374151;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        button:hover {\n          background: #f3f4f6;\n          border-color: #9ca3af;\n        }\n\n        button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        button.primary {\n          background: #3b82f6;\n          color: white;\n          border-color: #3b82f6;\n        }\n\n        button.primary:hover {\n          background: #2563eb;\n          border-color: #2563eb;\n        }\n\n        .status-section {\n          margin-bottom: 16px;\n        }\n\n        .debug-log {\n          background: #1f2937;\n          color: #f3f4f6;\n          padding: 12px;\n          border-radius: 6px;\n          font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n          font-size: 12px;\n          max-height: 300px;\n          overflow-y: auto;\n          white-space: pre-wrap;\n          word-break: break-all;\n        }\n\n        .media-blobs {\n          margin-top: 16px;\n        }\n\n        .media-blob {\n          padding: 12px;\n          border: 1px solid #e5e7eb;\n          border-radius: 6px;\n          margin-bottom: 8px;\n          background: white;\n        }\n\n        .media-blob-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 8px;\n        }\n\n        .media-blob-id {\n          font-family: monospace;\n          font-size: 12px;\n          color: #6b7280;\n        }\n\n        .media-blob-info {\n          font-size: 14px;\n          color: #374151;\n        }\n\n        .media-blob-meta {\n          font-size: 12px;\n          color: #6b7280;\n          margin-top: 4px;\n        }\n\n        .empty-state {\n          text-align: center;\n          color: #6b7280;\n          font-style: italic;\n          padding: 32px;\n        }\n\n        .error-message {\n          background: #fef2f2;\n          border: 1px solid #fecaca;\n          color: #dc2626;\n          padding: 12px;\n          border-radius: 6px;\n          margin-bottom: 16px;\n        }\n\n        .file-upload-section {\n          margin-top: 16px;\n          padding: 16px;\n          border: 2px dashed #d1d5db;\n          border-radius: 8px;\n          background: #f9fafb;\n          transition: all 0.2s;\n        }\n\n        .file-upload-section.drag-over {\n          border-color: #3b82f6;\n          background: #eff6ff;\n        }\n\n        .file-upload-section.uploading {\n          border-color: #10b981;\n          background: #ecfdf5;\n        }\n\n        .upload-controls {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 12px;\n        }\n\n        .file-input-wrapper {\n          position: relative;\n          overflow: hidden;\n          display: inline-block;\n        }\n\n        .file-input {\n          position: absolute;\n          left: -9999px;\n          opacity: 0;\n        }\n\n        .file-input-label {\n          display: inline-flex;\n          align-items: center;\n          gap: 8px;\n          padding: 10px 20px;\n          background: #3b82f6;\n          color: white;\n          border-radius: 6px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 500;\n          transition: background 0.2s;\n        }\n\n        .file-input-label:hover {\n          background: #2563eb;\n        }\n\n        .file-input-label:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .upload-hint {\n          color: #6b7280;\n          font-size: 14px;\n          text-align: center;\n          margin: 8px 0;\n        }\n\n        .upload-progress {\n          color: #374151;\n          font-size: 14px;\n          font-weight: 500;\n          text-align: center;\n          padding: 8px;\n          background: #f3f4f6;\n          border-radius: 4px;\n          margin-top: 8px;\n        }\n\n        .upload-icon {\n          display: inline-block;\n          width: 16px;\n          height: 16px;\n        }\n      `}</style>\n\n      <div class=\"container\">\n        <div class=\"header\">\n          <h2 class=\"title\">WebSocket Handler</h2>\n          <div class=\"controls\">\n            <button\n              onClick={ping}\n              disabled={status() !== ConnectionStatus.Connected}\n            >\n              Ping\n            </button>\n            <button\n              onClick={() => getMediaBlobs()}\n              disabled={status() !== ConnectionStatus.Connected}\n            >\n              Get Media Blobs\n            </button>\n            <Show\n              when={status() === ConnectionStatus.Connected}\n              fallback={\n                <button onClick={connect} class=\"primary\">\n                  Connect\n                </button>\n              }\n            >\n              <button onClick={disconnect}>Disconnect</button>\n            </Show>\n          </div>\n        </div>\n\n        <div class=\"status-section\">\n          {WebSocketStatus({\n            status: status(),\n            userCount: userCount(),\n            showUserCount: true,\n            showText: true,\n            compact: false,\n          })}\n        </div>\n\n        <Show when={errorMessage()}>\n          <div class=\"error-message\">{errorMessage()}</div>\n        </Show>\n\n        <Show when={showDebugLog()}>\n          <div class=\"debug-log\">{debugLog().join(\"\\n\")}</div>\n        </Show>\n\n        <Show when={status() === ConnectionStatus.Connected}>\n          <div\n            class={`file-upload-section ${isDragOver() ? \"drag-over\" : \"\"} ${isUploading() ? \"uploading\" : \"\"}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            <div class=\"upload-controls\">\n              <div class=\"file-input-wrapper\">\n                <input\n                  type=\"file\"\n                  id=\"file-input\"\n                  class=\"file-input\"\n                  multiple\n                  onChange={handleFileSelect}\n                  disabled={isUploading()}\n                />\n                <label\n                  for=\"file-input\"\n                  class={`file-input-label ${isUploading() ? \"disabled\" : \"\"}`}\n                >\n                  <svg\n                    class=\"upload-icon\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-width=\"2\"\n                      d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                    />\n                  </svg>\n                  {isUploading() ? \"Uploading...\" : \"Choose Files\"}\n                </label>\n              </div>\n\n              <div class=\"upload-hint\">\n                {isDragOver()\n                  ? \"Drop files here to upload\"\n                  : \"Drag & drop files here or click to select\"}\n              </div>\n\n              <Show when={uploadProgress()}>\n                <div class=\"upload-progress\">{uploadProgress()}</div>\n              </Show>\n            </div>\n          </div>\n        </Show>\n\n        <div class=\"media-blobs\">\n          <h3>Media Blobs ({mediaBlobs().length})</h3>\n          <Show\n            when={mediaBlobs().length > 0}\n            fallback={\n              <div class=\"empty-state\">\n                No media blobs received yet. Click \"Get Media Blobs\" to fetch\n                from server.\n              </div>\n            }\n          >\n            <For each={mediaBlobs()}>\n              {(blob) => (\n                <div class=\"media-blob\">\n                  <div class=\"media-blob-header\">\n                    <div class=\"media-blob-id\">{blob.id}</div>\n                    <div class=\"media-blob-info\">\n                      {blob.mime || \"Unknown type\"} •{\" \"}\n                      {formatFileSize(blob.size)}\n                    </div>\n                  </div>\n                  <div class=\"media-blob-meta\">\n                    SHA256: {blob.sha256}\n                    <br />\n                    Client: {blob.source_client_id || \"Unknown\"}\n                    <br />\n                    Path: {blob.local_path || \"None\"}\n                    <br />\n                    Created: {new Date(blob.created_at).toLocaleString()}\n                    <Show when={Object.keys(blob.metadata).length > 0}>\n                      <br />\n                      Metadata: {JSON.stringify(blob.metadata)}\n                    </Show>\n                  </div>\n                </div>\n              )}\n            </For>\n          </Show>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Register as custom element\ncustomElement(\n  \"websocket-handler\",\n  {\n    websocketUrl: \"\",\n    autoConnect: true,\n    showDebugLog: true,\n  },\n  WebSocketHandler\n);\n\nexport { WebSocketHandler };\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"websocket-handler\": {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n"],"names":["WebSocketStatus","props","lastStatusChange","setLastStatusChange","createSignal","Date","now","status","ConnectionStatus","Disconnected","showText","userCount","showUserCount","compact","createEffect","currentStatus","event","CustomEvent","detail","timestamp","bubbles","setTimeout","host","document","querySelector","dispatchEvent","getStatusText","Connecting","Connected","Error","getIndicatorClass","getTextClass","_el$","_tmpl$3","_el$2","firstChild","_el$3","nextSibling","style","setProperty","_$insert","_$createComponent","Show","when","_$memo","children","_el$4","_tmpl$","_$effect","_$className","_el$5","_tmpl$2","_el$6","_el$9","_el$7","_el$0","customElement","WebSocketHandler","websocketUrl","autoConnect","showDebugLog","client","setClient","setStatus","debugLog","setDebugLog","mediaBlobs","setMediaBlobs","errorMessage","setErrorMessage","setUserCount","isDragOver","setIsDragOver","isUploading","setIsUploading","uploadProgress","setUploadProgress","shouldAutoConnect","url","connect","log","message","args","toLocaleTimeString","logEntry","length","JSON","stringify","prev","slice","console","updateStatus","newStatus","setError","clearError","currentClient","getStatus","newClient","WebSocketClient","autoReconnect","debug","setupClientListeners","error","disconnect","wsClient","on","data","count","blobs","total_count","blobsEvent","totalCount","blob","id","user_count","ping","success","getMediaBlobs","limit","offset","getMediaBlob","uploadMediaBlob","blob_id","blob_size","size","blob_mime","mime","blob_sha256","sha256","substring","calculateSHA256","file","buffer","arrayBuffer","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","padStart","join","fileToBlob","randomUUID","type","source_client_id","local_path","name","metadata","originalName","lastModified","uploadedAt","toISOString","created_at","updated_at","uploadFile","errorMsg","String","handleFileSelect","input","target","files","forEach","value","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","exposeMethods","element","Object","assign","formatFileSize","bytes","units","unitIndex","toFixed","_tmpl$6","_el$8","_el$19","_el$20","_el$21","_el$23","$$click","fallback","_el$24","_tmpl$7","_el$1","_el$10","_el$11","_tmpl$5","_el$12","_el$13","_el$14","_el$15","_el$17","addEventListener","_el$18","_tmpl$4","_p$","_v$","_v$2","_v$3","e","t","disabled","a","undefined","_tmpl$8","For","each","_el$26","_tmpl$0","_el$27","_el$28","_el$29","_el$30","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","toLocaleString","keys","_tmpl$9","_v$4","_v$5","_$delegateEvents"],"mappings":"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"}