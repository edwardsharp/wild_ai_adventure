{"version":3,"file":"all-components.js","sources":["../src/web-components/simple-test.tsx","../src/web-components/smart-file-upload.tsx","../src/web-components/index.tsx"],"sourcesContent":["/* @jsxImportSource solid-js */\nimport { render } from \"solid-js/web\";\nimport { createSignal } from \"solid-js\";\n\nconsole.log(\"🚀 Script started loading\");\n\nfunction SimpleTest() {\n  console.log(\"📦 SimpleTest component created\");\n  const [count, setCount] = createSignal(0);\n\n  return (\n    <div style={{ padding: \"20px\", border: \"1px solid #ccc\", margin: \"20px\" }}>\n      <h2>Simple Solid.js Test</h2>\n      <p>Count: {count()}</p>\n      <button onClick={() => setCount(count() + 1)}>Increment</button>\n    </div>\n  );\n}\n\n// Create a simple custom element manually without solid-element\nclass SimpleTestElement extends HTMLElement {\n  private dispose?: () => void;\n\n  connectedCallback() {\n    console.log(\"🔌 SimpleTestElement connected\");\n    try {\n      this.dispose = render(() => <SimpleTest />, this);\n      console.log(\"✅ Render successful\");\n    } catch (error) {\n      console.error(\"❌ Render failed:\", error);\n    }\n  }\n\n  disconnectedCallback() {\n    console.log(\"🔌 SimpleTestElement disconnected\");\n    if (this.dispose) {\n      this.dispose();\n    }\n  }\n}\n\nconsole.log(\"📝 About to register custom element\");\n\ntry {\n  // Register the custom element\n  customElements.define(\"simple-test\", SimpleTestElement);\n  console.log(\"✅ Custom element registered successfully\");\n} catch (error) {\n  console.error(\"❌ Failed to register custom element:\", error);\n}\n\nexport { SimpleTest, SimpleTestElement };\n","/**\n * Smart File Upload Component\n *\n * Intelligently handles file uploads by routing small files (<10MB) through\n * WebSocket and large files (≥10MB) through HTTP API. Provides unified UI\n * for both upload methods with proper progress tracking and error handling.\n */\n\n/* @jsxImportSource solid-js */\nimport { customElement } from \"solid-element\";\nimport { createSignal, createEffect, For, Show, onCleanup } from \"solid-js\";\nimport {\n  FileUploadHandler,\n  WebSocketFileUploadHandler,\n  type UploadProgress,\n} from \"../lib/index.js\";\n\nexport interface SmartFileUploadProps {\n  /** Base URL for HTTP uploads (default: current origin) */\n  baseUrl?: string;\n  /** WebSocket connection for small file uploads */\n  websocketConnection?: any; // WebSocketClient instance\n  /** Maximum file size threshold for WebSocket vs HTTP (default: 10MB) */\n  sizeThreshold?: number;\n  /** Show debug information */\n  showDebug?: boolean;\n  /** Allow multiple file selection */\n  multiple?: boolean;\n  /** Accept file types (MIME types or extensions) */\n  accept?: string;\n  /** Disabled state */\n  disabled?: boolean;\n}\n\ninterface UploadItem {\n  id: string;\n  file: File;\n  method: \"websocket\" | \"http\";\n  status: \"pending\" | \"uploading\" | \"completed\" | \"error\";\n  progress: number;\n  error?: string;\n  result?: any;\n}\n\nconst SmartFileUpload = (props: SmartFileUploadProps) => {\n  const [uploads, setUploads] = createSignal<UploadItem[]>([]);\n  const [isDragOver, setIsDragOver] = createSignal(false);\n  const [httpUploader, setHttpUploader] =\n    createSignal<FileUploadHandler | null>(null);\n  const [websocketUploader, setWebsocketUploader] =\n    createSignal<WebSocketFileUploadHandler | null>(null);\n\n  const sizeThreshold = () => props.sizeThreshold || 10 * 1024 * 1024; // 10MB\n  const baseUrl = () => props.baseUrl || window.location.origin;\n\n  let fileInputRef: HTMLInputElement | undefined;\n\n  // Initialize uploaders\n  createEffect(() => {\n    // HTTP uploader for large files\n    const httpHandler = new FileUploadHandler({\n      baseUrl: baseUrl(),\n      minFileSize: sizeThreshold(),\n      maxFileSize: 1024 * 1024 * 1024, // 1GB\n    });\n\n    httpHandler.addEventListener(\"upload-progress\", (e: Event) => {\n      const { uploadId, stage, progress, error } = (e as CustomEvent)\n        .detail as UploadProgress;\n      updateUploadProgress(\n        uploadId,\n        progress,\n        stage === \"error\" ? \"error\" : \"uploading\",\n        error?.message\n      );\n    });\n\n    setHttpUploader(httpHandler);\n\n    // WebSocket uploader for small files\n    const wsHandler = new WebSocketFileUploadHandler({\n      maxFileSize: sizeThreshold(),\n    });\n\n    wsHandler.addEventListener(\"upload-processed\", (e: Event) => {\n      const { uploadId, blob } = (e as CustomEvent).detail;\n      // Send via WebSocket if connected\n      if (props.websocketConnection) {\n        const success = props.websocketConnection.uploadMediaBlob(blob);\n        if (success) {\n          updateUploadProgress(uploadId, 100, \"completed\");\n        } else {\n          updateUploadProgress(\n            uploadId,\n            0,\n            \"error\",\n            \"Failed to send via WebSocket\"\n          );\n        }\n      } else {\n        updateUploadProgress(uploadId, 0, \"error\", \"WebSocket not connected\");\n      }\n    });\n\n    wsHandler.addEventListener(\"upload-error\", (e: Event) => {\n      const { uploadId, error } = (e as CustomEvent).detail;\n      updateUploadProgress(uploadId, 0, \"error\", error);\n    });\n\n    setWebsocketUploader(wsHandler);\n\n    // Cleanup\n    onCleanup(() => {\n      httpHandler.cancelAllUploads();\n      wsHandler.destroy();\n    });\n  });\n\n  const updateUploadProgress = (\n    id: string,\n    progress: number,\n    status: UploadItem[\"status\"],\n    error?: string\n  ) => {\n    setUploads((prev) =>\n      prev.map((upload) =>\n        upload.id === id ? { ...upload, progress, status, error } : upload\n      )\n    );\n  };\n\n  const addFiles = async (files: FileList | File[]) => {\n    const fileArray = Array.from(files);\n    const newUploads: UploadItem[] = [];\n\n    for (const file of fileArray) {\n      const uploadId = crypto.randomUUID();\n      const method = file.size >= sizeThreshold() ? \"http\" : \"websocket\";\n\n      newUploads.push({\n        id: uploadId,\n        file,\n        method,\n        status: \"pending\",\n        progress: 0,\n      });\n    }\n\n    setUploads((prev) => [...prev, ...newUploads]);\n\n    // Start uploads\n    for (const upload of newUploads) {\n      if (upload.method === \"http\") {\n        startHttpUpload(upload);\n      } else {\n        startWebSocketUpload(upload);\n      }\n    }\n  };\n\n  const startHttpUpload = async (upload: UploadItem) => {\n    const uploader = httpUploader();\n    if (!uploader) return;\n\n    updateUploadProgress(upload.id, 0, \"uploading\");\n\n    try {\n      const result = await uploader.uploadFile(upload.file, {\n        uploadedVia: \"smart-file-upload\",\n        originalMethod: \"http\",\n      });\n\n      updateUploadProgress(upload.id, 100, \"completed\");\n\n      // Store result\n      setUploads((prev) =>\n        prev.map((u) => (u.id === upload.id ? { ...u, result } : u))\n      );\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n      updateUploadProgress(upload.id, 0, \"error\", errorMessage);\n    }\n  };\n\n  const startWebSocketUpload = async (upload: UploadItem) => {\n    const uploader = websocketUploader();\n    if (!uploader) return;\n\n    updateUploadProgress(upload.id, 0, \"uploading\");\n\n    try {\n      await uploader.addFiles([upload.file]);\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n      updateUploadProgress(upload.id, 0, \"error\", errorMessage);\n    }\n  };\n\n  const removeUpload = (id: string) => {\n    setUploads((prev) => prev.filter((u) => u.id !== id));\n  };\n\n  const clearCompleted = () => {\n    setUploads((prev) => prev.filter((u) => u.status !== \"completed\"));\n  };\n\n  const retryUpload = (upload: UploadItem) => {\n    if (upload.method === \"http\") {\n      startHttpUpload(upload);\n    } else {\n      startWebSocketUpload(upload);\n    }\n  };\n\n  const handleFileSelect = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      addFiles(input.files);\n      input.value = \"\"; // Reset input\n    }\n  };\n\n  const handleDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    if (event.dataTransfer?.files) {\n      addFiles(event.dataTransfer.files);\n    }\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (!bytes) return \"0 B\";\n    const units = [\"B\", \"KB\", \"MB\", \"GB\"];\n    let size = bytes;\n    let unitIndex = 0;\n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  };\n\n  const getMethodLabel = (method: \"websocket\" | \"http\"): string => {\n    return method === \"websocket\" ? \"WebSocket\" : \"HTTP API\";\n  };\n\n  return (\n    <div class=\"smart-file-upload\">\n      <style>{`\n        .smart-file-upload {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          max-width: 600px;\n        }\n\n        .upload-zone {\n          border: 2px dashed #d1d5db;\n          border-radius: 8px;\n          padding: 2rem;\n          text-align: center;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          background: #fafafa;\n        }\n\n        .upload-zone:hover,\n        .upload-zone.drag-over {\n          border-color: #3b82f6;\n          background: #eff6ff;\n        }\n\n        .upload-zone.disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        .upload-button {\n          background: #3b82f6;\n          color: white;\n          border: none;\n          padding: 0.75rem 1.5rem;\n          border-radius: 6px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: background 0.2s ease;\n        }\n\n        .upload-button:hover:not(:disabled) {\n          background: #2563eb;\n        }\n\n        .upload-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .upload-list {\n          margin-top: 1.5rem;\n        }\n\n        .upload-item {\n          border: 1px solid #e5e7eb;\n          border-radius: 6px;\n          padding: 1rem;\n          margin-bottom: 0.75rem;\n          background: white;\n        }\n\n        .upload-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: 0.5rem;\n        }\n\n        .upload-info {\n          flex: 1;\n        }\n\n        .upload-filename {\n          font-weight: 500;\n          color: #374151;\n          margin-bottom: 0.25rem;\n        }\n\n        .upload-details {\n          font-size: 0.875rem;\n          color: #6b7280;\n          display: flex;\n          gap: 1rem;\n          flex-wrap: wrap;\n        }\n\n        .upload-method {\n          background: #f3f4f6;\n          padding: 0.125rem 0.5rem;\n          border-radius: 4px;\n          font-size: 0.75rem;\n          font-weight: 500;\n        }\n\n        .upload-method.websocket {\n          background: #dbeafe;\n          color: #1e40af;\n        }\n\n        .upload-method.http {\n          background: #d1fae5;\n          color: #065f46;\n        }\n\n        .upload-progress {\n          margin-top: 0.75rem;\n        }\n\n        .progress-bar {\n          width: 100%;\n          height: 6px;\n          background: #f3f4f6;\n          border-radius: 3px;\n          overflow: hidden;\n        }\n\n        .progress-fill {\n          height: 100%;\n          background: #3b82f6;\n          transition: width 0.3s ease;\n        }\n\n        .progress-fill.completed {\n          background: #10b981;\n        }\n\n        .progress-fill.error {\n          background: #ef4444;\n        }\n\n        .upload-status {\n          margin-top: 0.5rem;\n          font-size: 0.875rem;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .status-text {\n          font-weight: 500;\n        }\n\n        .status-text.completed {\n          color: #059669;\n        }\n\n        .status-text.error {\n          color: #dc2626;\n        }\n\n        .status-text.uploading {\n          color: #2563eb;\n        }\n\n        .upload-actions {\n          display: flex;\n          gap: 0.5rem;\n        }\n\n        .action-button {\n          background: none;\n          border: 1px solid #d1d5db;\n          padding: 0.25rem 0.5rem;\n          border-radius: 4px;\n          font-size: 0.75rem;\n          cursor: pointer;\n          transition: all 0.2s ease;\n        }\n\n        .action-button:hover {\n          background: #f9fafb;\n        }\n\n        .action-button.retry {\n          border-color: #3b82f6;\n          color: #3b82f6;\n        }\n\n        .action-button.remove {\n          border-color: #ef4444;\n          color: #ef4444;\n        }\n\n        .controls {\n          margin-top: 1rem;\n          display: flex;\n          gap: 0.75rem;\n          flex-wrap: wrap;\n        }\n\n        .control-button {\n          background: #f9fafb;\n          border: 1px solid #d1d5db;\n          padding: 0.5rem 1rem;\n          border-radius: 4px;\n          font-size: 0.875rem;\n          cursor: pointer;\n          transition: all 0.2s ease;\n        }\n\n        .control-button:hover {\n          background: #f3f4f6;\n        }\n\n        .threshold-info {\n          margin-top: 1rem;\n          padding: 0.75rem;\n          background: #f8fafc;\n          border-radius: 6px;\n          font-size: 0.875rem;\n          color: #64748b;\n        }\n\n        .hidden {\n          display: none;\n        }\n      `}</style>\n\n      {/* Upload Zone */}\n      <div\n        class={`upload-zone ${isDragOver() ? \"drag-over\" : \"\"} ${props.disabled ? \"disabled\" : \"\"}`}\n        onClick={() => !props.disabled && fileInputRef?.click()}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n      >\n        <div style={{ \"margin-bottom\": \"1rem\", \"font-size\": \"2rem\" }}>📁</div>\n        <div\n          style={{\n            \"margin-bottom\": \"0.5rem\",\n            \"font-weight\": \"500\",\n            color: \"#374151\",\n          }}\n        >\n          Drop files here or click to browse\n        </div>\n        <div\n          style={{\n            \"font-size\": \"0.875rem\",\n            color: \"#6b7280\",\n            \"margin-bottom\": \"1rem\",\n          }}\n        >\n          Small files (&lt;{formatFileSize(sizeThreshold())}) use WebSocket,\n          large files use HTTP API\n        </div>\n        <button\n          class=\"upload-button\"\n          disabled={props.disabled}\n          onClick={(e) => {\n            e.stopPropagation();\n            fileInputRef?.click();\n          }}\n        >\n          Select Files\n        </button>\n      </div>\n\n      {/* Hidden File Input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        class=\"hidden\"\n        multiple={props.multiple !== false}\n        accept={props.accept}\n        onChange={handleFileSelect}\n        disabled={props.disabled}\n      />\n\n      {/* Upload List */}\n      <Show when={uploads().length > 0}>\n        <div class=\"upload-list\">\n          <For each={uploads()}>\n            {(upload) => (\n              <div class=\"upload-item\">\n                <div class=\"upload-header\">\n                  <div class=\"upload-info\">\n                    <div class=\"upload-filename\">{upload.file.name}</div>\n                    <div class=\"upload-details\">\n                      <span>{formatFileSize(upload.file.size)}</span>\n                      <span>{upload.file.type || \"Unknown type\"}</span>\n                      <span class={`upload-method ${upload.method}`}>\n                        {getMethodLabel(upload.method)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <Show when={upload.status !== \"pending\"}>\n                  <div class=\"upload-progress\">\n                    <div class=\"progress-bar\">\n                      <div\n                        class={`progress-fill ${upload.status}`}\n                        style={{ width: `${upload.progress}%` }}\n                      />\n                    </div>\n                    <div class=\"upload-status\">\n                      <span class={`status-text ${upload.status}`}>\n                        {upload.status === \"uploading\" &&\n                          `Uploading... ${upload.progress}%`}\n                        {upload.status === \"completed\" && \"✅ Upload completed\"}\n                        {upload.status === \"error\" &&\n                          `❌ ${upload.error || \"Upload failed\"}`}\n                      </span>\n                      <div class=\"upload-actions\">\n                        <Show when={upload.status === \"error\"}>\n                          <button\n                            class=\"action-button retry\"\n                            onClick={() => retryUpload(upload)}\n                          >\n                            Retry\n                          </button>\n                        </Show>\n                        <button\n                          class=\"action-button remove\"\n                          onClick={() => removeUpload(upload.id)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </Show>\n              </div>\n            )}\n          </For>\n        </div>\n\n        {/* Controls */}\n        <div class=\"controls\">\n          <button class=\"control-button\" onClick={clearCompleted}>\n            Clear Completed\n          </button>\n          <span\n            style={{\n              \"font-size\": \"0.875rem\",\n              color: \"#6b7280\",\n              \"align-self\": \"center\",\n            }}\n          >\n            {uploads().length} total,{\" \"}\n            {uploads().filter((u) => u.status === \"completed\").length} completed\n          </span>\n        </div>\n      </Show>\n\n      {/* Threshold Info */}\n      <Show when={props.showDebug}>\n        <div class=\"threshold-info\">\n          <strong>Upload Routing:</strong>\n          <br />• Files &lt; {formatFileSize(sizeThreshold())}: WebSocket\n          (stored in database)\n          <br />• Files ≥ {formatFileSize(sizeThreshold())}: HTTP API (stored on\n          disk, admin only)\n        </div>\n      </Show>\n    </div>\n  );\n};\n\n// Register as custom element\ncustomElement(\n  \"smart-file-upload\",\n  {\n    baseUrl: undefined,\n    websocketConnection: undefined,\n    sizeThreshold: 10 * 1024 * 1024,\n    showDebug: false,\n    multiple: true,\n    accept: undefined,\n    disabled: false,\n  },\n  SmartFileUpload\n);\n\nexport { SmartFileUpload };\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"smart-file-upload\": {\n        baseUrl?: string;\n        websocketConnection?: any;\n        sizeThreshold?: number;\n        showDebug?: boolean;\n        multiple?: boolean;\n        accept?: string;\n        disabled?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n","/**\n * Web Components Library - Entry Point\n *\n * This file exports all available web components for the client library.\n * Components are automatically registered as custom elements when imported.\n */\n\n/* @jsxImportSource solid-js */\n\n// WebAuthn Components\nexport { VERSION } from \"./webauthn-component\";\nexport type { WebAuthnAuthProps } from \"./webauthn-component\";\n\n// WebSocket Components\nimport { ConnectionStatus } from \"./websocket-status\";\nexport { ConnectionStatus };\nexport type { WebSocketHandlerProps } from \"./websocket-handler\";\nexport type { WebSocketStatusProps } from \"./websocket-status\";\n\n// Import components to ensure they register as custom elements\nimport \"./webauthn-component\";\nimport \"./websocket-handler\";\nimport \"./websocket-status\";\nimport \"./websocket-demo\";\nimport \"./simple-test\";\nimport \"./smart-file-upload\";\n\n// Component registration confirmation\nconst REGISTERED_COMPONENTS = [\n  \"webauthn-auth\",\n  \"websocket-handler\",\n  \"websocket-status\",\n  \"websocket-demo\",\n  \"simple-test\",\n  \"smart-file-upload\",\n] as const;\n\nexport { REGISTERED_COMPONENTS };\n\n// Global type declarations for TypeScript\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"webauthn-auth\": {\n        \"base-url\"?: string;\n        theme?: \"light\" | \"dark\";\n        \"auto-login\"?: boolean;\n      };\n      \"websocket-handler\": {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n      \"websocket-demo\": {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n\n      \"simple-test\": {\n        message?: string;\n      };\n\n      \"smart-file-upload\": {\n        baseUrl?: string;\n        websocketConnection?: any;\n        sizeThreshold?: number;\n        showDebug?: boolean;\n        multiple?: boolean;\n        accept?: string;\n        disabled?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n\n// Custom events interface\nexport interface WebComponentEvents {\n  // WebAuthn events\n  \"webauthn-login\": CustomEvent<{ username: string; userId: string }>;\n  \"webauthn-logout\": CustomEvent<Record<string, never>>;\n  \"webauthn-error\": CustomEvent<{ error: string }>;\n  \"webauthn-status-change\": CustomEvent<{ isAuthenticated: boolean }>;\n\n  // WebSocket events\n  \"status-change\": CustomEvent<{\n    status: ConnectionStatus;\n    timestamp?: number;\n  }>;\n  \"media-blobs-received\": CustomEvent<{\n    blobs: unknown[];\n    totalCount?: number;\n  }>;\n  \"media-blob-received\": CustomEvent<{ blob: unknown }>;\n}\n\n// Helper function to add typed event listeners\nexport function addWebComponentListener<K extends keyof WebComponentEvents>(\n  element: Element,\n  type: K,\n  listener: (event: WebComponentEvents[K]) => void,\n  options?: boolean | AddEventListenerOptions\n): void {\n  element.addEventListener(type, listener as EventListener, options);\n}\n\n// Log that components are loaded\nconsole.log(\"🧩 Web Components Library loaded - Available components:\", [\n  \"webauthn-auth\",\n  \"websocket-handler\",\n  \"websocket-status\",\n  \"websocket-demo\",\n  \"simple-test\",\n  \"smart-file-upload\",\n]);\n"],"names":["console","log","SimpleTest","count","setCount","createSignal","_el$","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_el$5","style","setProperty","_$insert","$$click","SimpleTestElement","HTMLElement","dispose","connectedCallback","render","_$createComponent","error","disconnectedCallback","customElements","define","_$delegateEvents","SmartFileUpload","props","uploads","setUploads","isDragOver","setIsDragOver","httpUploader","setHttpUploader","websocketUploader","setWebsocketUploader","sizeThreshold","baseUrl","window","location","origin","fileInputRef","createEffect","httpHandler","FileUploadHandler","minFileSize","maxFileSize","addEventListener","e","uploadId","stage","progress","detail","updateUploadProgress","message","wsHandler","WebSocketFileUploadHandler","blob","websocketConnection","uploadMediaBlob","onCleanup","cancelAllUploads","destroy","id","status","prev","map","upload","addFiles","files","fileArray","Array","from","newUploads","file","crypto","randomUUID","method","size","push","startHttpUpload","startWebSocketUpload","uploader","result","uploadFile","uploadedVia","originalMethod","u","errorMessage","Error","String","removeUpload","filter","clearCompleted","retryUpload","handleFileSelect","event","input","target","length","value","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","formatFileSize","bytes","units","unitIndex","toFixed","getMethodLabel","_tmpl$4","_el$4","_el$6","_el$7","_el$9","_el$0","_el$1","disabled","click","stopPropagation","_ref$","_$use","Show","when","children","_el$10","For","each","_el$28","_tmpl$7","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","name","type","_el$36","_tmpl$6","_el$37","_el$38","_el$39","_el$40","_el$41","_el$43","_el$42","_tmpl$5","_$effect","_p$","_v$6","_v$7","_v$8","_$className","t","removeProperty","a","undefined","_el$11","_tmpl$2","_el$12","_el$13","_el$14","_el$17","showDebug","_el$18","_tmpl$3","_el$19","_el$20","_el$21","_el$26","_el$22","_el$23","_el$24","_el$27","_v$","_v$2","_v$3","multiple","_v$4","accept","_v$5","o","_$setAttribute","i","customElement"],"mappings":"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"}