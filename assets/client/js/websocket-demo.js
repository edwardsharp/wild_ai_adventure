import{g as De,d as Le,a as f,k as te,q as xe,t as w,i as d,c as S,p as ie,S as _,F as oe,l as T,u as _e}from"./types-4vF2br7O.js";import{W as ke,C as se}from"./websocket-client-n5odv0FM.js";class Me extends EventTarget{blobs=[];blobDataCache=new Map;loadingBlobs=new Set;constructor(){super()}updateBlobs(e){this.blobs=[...e],this.blobs.forEach(t=>{t.mime?.startsWith("image/")&&!this.isCached(t.id)&&!this.isLoading(t.id)&&setTimeout(()=>this.requestBlobData(t.id),100)}),this.dispatchEvent(new CustomEvent("blobs-updated",{detail:{blobs:this.blobs,count:this.blobs.length}}))}getBlobs(){return[...this.blobs]}getBlob(e){return this.blobs.find(t=>t.id===e)}cacheBlobData(e){if(!e.id||!e.data)return;const t=new Uint8Array(e.data),i=new Blob([t],{type:e.mime||"application/octet-stream"}),o=URL.createObjectURL(i);this.blobDataCache.set(e.id,o),this.loadingBlobs.delete(e.id),this.dispatchEvent(new CustomEvent("blob-data-cached",{detail:{id:e.id,dataUrl:o,mime:e.mime}}))}isCached(e){return this.blobDataCache.has(e)}getCachedDataUrl(e){return this.blobDataCache.get(e)}isLoading(e){return this.loadingBlobs.has(e)}markAsLoading(e){this.loadingBlobs.add(e)}requestBlobData(e){this.isCached(e)||this.isLoading(e)||(this.markAsLoading(e),this.dispatchEvent(new CustomEvent("blob-data-requested",{detail:{id:e}})))}getBlobDisplayInfo(e){return{id:e.id,mime:e.mime||"Unknown type",size:this.formatFileSize(e.size),sha256:e.sha256,clientId:e.source_client_id||"Unknown",path:e.local_path||"None",createdAt:new Date(e.created_at).toLocaleString(),metadata:Object.keys(e.metadata||{}).length>0?JSON.stringify(e.metadata):"",thumbnailHtml:this.generateThumbnailHtml(e)}}generateThumbnailHtml(e){const t=e.mime||"",i=this.getCachedDataUrl(e.id),o=this.isLoading(e.id),s="width: 80px; height: 80px; border-radius: 4px; object-fit: cover;",a="display: flex; align-items: center; justify-content: center; background: #f0f0f0; font-size: 0.7em; border-radius: 4px; cursor: pointer;";return t.startsWith("image/")?i?`<img src="${i}" alt="Thumbnail" style="${s}" loading="lazy">`:o?`<div style="${s} ${a}">Loading...</div>`:`<div style="${s} ${a}" onclick="window.loadBlobData('${e.id}')">LOAD IMAGE</div>`:t.startsWith("video/")?i?`<video style="${s}" controls muted><source src="${i}" type="${t}"></video>`:o?`<div style="${s} ${a}">Loading...</div>`:`<div style="${s} ${a}" onclick="window.loadBlobData('${e.id}')">LOAD VIDEO</div>`:t.startsWith("audio/")?i?`<audio style="${s}" controls><source src="${i}" type="${t}"></audio>`:o?`<div style="${s} ${a}">Loading...</div>`:`<div style="${s} ${a}" onclick="window.loadBlobData('${e.id}')">LOAD AUDIO</div>`:t==="application/pdf"?`<div style="${s} ${a}">PDF</div>`:`<div style="${s} ${a}">FILE</div>`}downloadBlob(e,t){const i=this.getCachedDataUrl(e);if(!i)return this.requestBlobData(e),!1;const o=this.getBlob(e),s=t||o?.local_path||`blob-${e}`,a=document.createElement("a");return a.href=i,a.download=s,document.body.appendChild(a),a.click(),document.body.removeChild(a),this.dispatchEvent(new CustomEvent("blob-downloaded",{detail:{id:e,filename:s}})),!0}viewBlob(e){const t=this.getCachedDataUrl(e);return t?(window.open(t,"_blank"),this.dispatchEvent(new CustomEvent("blob-viewed",{detail:{id:e}})),!0):(this.requestBlobData(e),!1)}formatFileSize(e){if(!e)return"Unknown size";const t=["B","KB","MB","GB"];let i=e,o=0;for(;i>=1024&&o<t.length-1;)i/=1024,o++;return`${i.toFixed(1)} ${t[o]}`}clearCache(){for(const e of this.blobDataCache.values())URL.revokeObjectURL(e);this.blobDataCache.clear(),this.loadingBlobs.clear(),this.dispatchEvent(new CustomEvent("cache-cleared",{detail:{timestamp:Date.now()}}))}getCacheStats(){return{cachedCount:this.blobDataCache.size,loadingCount:this.loadingBlobs.size,totalBlobs:this.blobs.length}}destroy(){this.clearCache(),this.blobs=[],["blobs-updated","blob-data-cached","blob-data-requested","blob-downloaded","blob-viewed","cache-cleared"].forEach(t=>{(this._listeners?.[t]||[]).forEach(o=>{this.removeEventListener(t,o)})})}}class Ue extends EventTarget{uploads=new Map;options;constructor(e={}){super(),this.options={maxFileSize:10*1024*1024,allowedMimeTypes:[],clientId:"web-client",chunkSize:64*1024,...e}}async addFiles(e){const t=Array.from(e),i=[];for(const o of t){const s=crypto.randomUUID();i.push(s);const a={file:o,id:s,progress:0,status:"pending"};this.uploads.set(s,a),this.processFile(s)}return i}getUpload(e){return this.uploads.get(e)}getAllUploads(){return Array.from(this.uploads.values())}clearCompleted(){for(const[e,t]of this.uploads.entries())(t.status==="completed"||t.status==="error")&&this.uploads.delete(e);this.dispatchEvent(new CustomEvent("uploads-cleared",{detail:{timestamp:Date.now()}}))}cancelUpload(e){const t=this.uploads.get(e);t&&t.status!=="completed"&&(t.status="error",t.error="Cancelled by user",this.dispatchEvent(new CustomEvent("upload-cancelled",{detail:{uploadId:e,file:t.file}})))}async processFile(e){const t=this.uploads.get(e);if(t)try{t.status="processing",t.progress=0,this.dispatchEvent(new CustomEvent("upload-started",{detail:{uploadId:e,file:t.file}})),this.validateFile(t.file),t.progress=10;const i=await this.readFile(t.file);t.progress=30;const o=await this.calculateSHA256(i);t.progress=60;const s=this.createProcessedBlob(t.file,i,o);t.progress=90,t.status="uploading",t.progress=100,this.dispatchEvent(new CustomEvent("upload-processed",{detail:{uploadId:e,file:t.file,blob:s}})),t.status="completed",this.dispatchEvent(new CustomEvent("upload-completed",{detail:{uploadId:e,file:t.file,blob:s}}))}catch(i){t.status="error",t.error=i instanceof Error?i.message:String(i),this.dispatchEvent(new CustomEvent("upload-error",{detail:{uploadId:e,file:t.file,error:t.error}}))}}validateFile(e){if(e.size>this.options.maxFileSize)throw new Error(`File "${e.name}" is too large (${this.formatFileSize(e.size)}). Maximum size is ${this.formatFileSize(this.options.maxFileSize)}.`);if(this.options.allowedMimeTypes.length>0){const t=e.type||"application/octet-stream";if(!this.options.allowedMimeTypes.includes(t))throw new Error(`File type "${t}" is not allowed. Allowed types: ${this.options.allowedMimeTypes.join(", ")}`)}if(e.size===0)throw new Error(`File "${e.name}" is empty.`)}readFile(e){return new Promise((t,i)=>{const o=new FileReader;o.onload=()=>{o.result instanceof ArrayBuffer?t(o.result):i(new Error("Failed to read file as ArrayBuffer"))},o.onerror=()=>{i(new Error(`Failed to read file: ${o.error?.message||"Unknown error"}`))},o.readAsArrayBuffer(e)})}async calculateSHA256(e){const t=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(t)).map(o=>o.toString(16).padStart(2,"0")).join("")}createProcessedBlob(e,t,i){const o=Array.from(new Uint8Array(t)),s=new Date().toISOString();return{id:crypto.randomUUID(),data:o,sha256:i,size:e.size,mime:e.type||"application/octet-stream",source_client_id:this.options.clientId,local_path:e.name,metadata:{originalName:e.name,lastModified:e.lastModified,uploadedAt:s,userAgent:navigator.userAgent},created_at:s,updated_at:s}}formatFileSize(e){if(!e)return"Unknown size";const t=["B","KB","MB","GB"];let i=e,o=0;for(;i>=1024&&o<t.length-1;)i/=1024,o++;return`${i.toFixed(1)} ${t[o]}`}getStats(){const e=Array.from(this.uploads.values());return{total:e.length,pending:e.filter(t=>t.status==="pending").length,processing:e.filter(t=>t.status==="processing").length,uploading:e.filter(t=>t.status==="uploading").length,completed:e.filter(t=>t.status==="completed").length,errors:e.filter(t=>t.status==="error").length}}updateOptions(e){this.options={...this.options,...e},this.dispatchEvent(new CustomEvent("options-updated",{detail:{options:this.options}}))}destroy(){this.uploads.clear(),["upload-started","upload-processed","upload-completed","upload-error","upload-cancelled","uploads-cleared","options-updated"].forEach(t=>{(this._listeners?.[t]||[]).forEach(o=>{this.removeEventListener(t,o)})})}}class Ae extends EventTarget{client;blobManager;uploadHandler;eventLog=[];options;constructor(e,t={}){super(),this.options={autoGetMediaBlobs:!0,logLevel:"info",...t},this.client=new ke({url:e,debug:this.options.logLevel==="debug",...this.options.websocket}),this.blobManager=new Me,this.uploadHandler=new Ue({clientId:"demo-client",...this.options.fileUpload}),this.setupEventHandlers()}async connect(){this.log("info","Connecting to WebSocket server"),this.client.connect()}disconnect(){this.log("info","Disconnecting from WebSocket server"),this.client.disconnect()}ping(){this.log("debug","Sending ping"),this.client.ping()}getMediaBlobs(e=10,t=0){this.log("debug",`Requesting media blobs (limit: ${e}, offset: ${t})`),this.client.getMediaBlobs(e,t)}async uploadFiles(e){return this.log("info",`Starting upload of ${e.length} file(s)`),this.uploadHandler.addFiles(e)}downloadBlob(e,t){return this.log("debug",`Downloading blob: ${e}`),this.blobManager.downloadBlob(e,t)}viewBlob(e){return this.log("debug",`Viewing blob: ${e}`),this.blobManager.viewBlob(e)}loadBlobData(e){this.log("debug",`Loading blob data: ${e}`),this.client.getMediaBlobData(e)}getConnectionStatus(){return this.client.getStatus()}isConnected(){return this.client.getStatus()===se.Connected}getUserCount(){return 0}getConnectionId(){return""}getBlobs(){return this.blobManager.getBlobs()}getBlobDisplayInfo(e){return this.blobManager.getBlobDisplayInfo(e)}getUploadStats(){return this.uploadHandler.getStats()}getCacheStats(){return this.blobManager.getCacheStats()}clearCompletedUploads(){this.uploadHandler.clearCompleted()}clearBlobCache(){this.blobManager.clearCache()}getEventLog(){return[...this.eventLog]}clearEventLog(){this.eventLog=[],this.dispatchEvent(new CustomEvent("log-cleared",{detail:{timestamp:Date.now()}}))}setupEventHandlers(){this.client.on("statusChange",e=>{this.log("info",`Connection status changed: ${e}`),this.dispatchEvent(new CustomEvent("status-change",{detail:{status:e}})),e===se.Connected&&this.options.autoGetMediaBlobs&&setTimeout(()=>this.getMediaBlobs(),100)}),this.client.on("welcome",e=>{this.log("info","Welcome received",e),this.dispatchEvent(new CustomEvent("welcome",{detail:e}))}),this.client.on("error",e=>{this.log("error","Server error",e),this.dispatchEvent(new CustomEvent("server-error",{detail:e}))}),this.client.on("parseError",(e,t)=>{this.log("error","Parse error",{error:e.message,rawMessage:t}),this.dispatchEvent(new CustomEvent("parse-error",{detail:{error:e.message,rawMessage:t}}))}),this.client.on("mediaBlobs",e=>{this.handleServerMessage({type:"MediaBlobs",data:e})}),this.client.on("mediaBlob",e=>{this.handleServerMessage({type:"MediaBlob",data:e})}),this.client.on("mediaBlobData",e=>{this.handleServerMessage({type:"MediaBlobData",data:e})}),this.client.on("connectionStatus",e=>{this.handleServerMessage({type:"ConnectionStatus",data:e})}),this.blobManager.addEventListener("blobs-updated",e=>{const t=e.detail;this.log("info",`Media blobs updated: ${t.count} blobs`),this.dispatchEvent(new CustomEvent("blobs-updated",{detail:t}))}),this.blobManager.addEventListener("blob-data-requested",e=>{const{id:t}=e.detail;this.client.getMediaBlobData(t)}),this.blobManager.addEventListener("blob-data-cached",e=>{const t=e.detail;this.log("debug",`Blob data cached: ${t.id}`),this.dispatchEvent(new CustomEvent("blob-data-cached",{detail:t}))}),this.uploadHandler.addEventListener("upload-started",e=>{const{file:t}=e.detail;this.log("info",`Upload started: ${t.name}`),this.dispatchEvent(new CustomEvent("upload-started",{detail:e.detail}))}),this.uploadHandler.addEventListener("upload-completed",e=>{const{file:t,blob:i}=e.detail;this.log("info",`Upload completed: ${t.name}`),this.client.uploadMediaBlob(i),this.dispatchEvent(new CustomEvent("upload-completed",{detail:e.detail}))}),this.uploadHandler.addEventListener("upload-error",e=>{const{file:t,error:i}=e.detail;this.log("error",`Upload failed: ${t.name}`,{error:i}),this.dispatchEvent(new CustomEvent("upload-error",{detail:e.detail}))})}handleServerMessage(e){switch(e.type){case"MediaBlobs":{const t=e.data;this.log("info",`Received ${t?.blobs?.length||0} media blobs`),this.blobManager.updateBlobs(t?.blobs||[]);break}case"MediaBlob":{const i=e.data?.blob;this.log("info",`Received single media blob: ${i?.id}`);break}case"MediaBlobData":{const t=e.data;this.log("debug",`Received blob data: ${t?.id}`),t&&this.blobManager.cacheBlobData(t);break}case"Error":{const i=e.data?.message||"Server error";this.log("error",`Server error: ${i}`),this.dispatchEvent(new CustomEvent("server-error",{detail:{error:i}}));break}default:this.log("debug",`Unknown message type: ${e.type}`)}this.dispatchEvent(new CustomEvent("message",{detail:{message:e}}))}log(e,t,i){if(!this.shouldLog(e))return;const o={type:e,timestamp:Date.now(),data:{message:t,data:i}};this.eventLog.push(o),this.eventLog.length>100&&(this.eventLog=this.eventLog.slice(-100)),this.dispatchEvent(new CustomEvent("log",{detail:o}));const s=new Date().toLocaleTimeString(),a=i?`[${s}] [WebSocketDemo] ${t}: ${JSON.stringify(i,null,2)}`:`[${s}] [WebSocketDemo] ${t}`;switch(e){case"error":console.error(a);break;case"warn":console.warn(a);break;case"debug":console.debug(a);break;default:console.log(a)}}shouldLog(e){const t=["none","error","warn","info","debug"],i=t.indexOf(this.options.logLevel||"info");return t.indexOf(e)<=i}destroy(){this.log("info","Destroying WebSocket demo client"),this.client.disconnect(),this.blobManager.destroy(),this.uploadHandler.destroy(),this.eventLog=[],["status-change","welcome","blobs-updated","blob-data-cached","upload-started","upload-completed","upload-error","server-error","parse-error","message","log","log-cleared"].forEach(t=>{(this._listeners?.[t]||[]).forEach(o=>{this.removeEventListener(t,o)})})}}var Fe=w("<div class=blob-list>"),ze=w("<div>No log entries yet..."),He=w("<div class=demo-section><h2 class=section-title>Debug Log</h2><div class=controls><button>Clear Log</button></div><div class=log-container>"),Pe=w(`<div><style>
        .demo-section { margin-bottom: 2rem; }
        .controls { display: flex; gap: 0.75rem; margin-bottom: 1rem; flex-wrap: wrap; align-items: center; }
        button {
          padding: 0.5rem 1rem;
          border: 1px solid #ccc;
          background: white;
          cursor: pointer;
          border-radius: 4px;
          font-size: 0.875rem;
          font-weight: 500;
        }
        button:hover:not(:disabled) { background: #f0f0f0; }
        button:disabled { opacity: 0.5; cursor: not-allowed; }
        button.primary { background: #3b82f6; color: white; border-color: #3b82f6; }
        button.primary:hover:not(:disabled) { background: #2563eb; }
        input[type="text"] {
          padding: 0.5rem;
          border: 1px solid #ccc;
          border-radius: 4px;
          min-width: 300px;
          font-size: 0.875rem;
        }
        .status-indicator {
          display: inline-block;
          width: 12px;
          height: 12px;
          border-radius: 50%;
          margin-right: 0.5rem;
        }
        .log-container {
          background: #f8f9fa;
          border: 1px solid #e9ecef;
          border-radius: 4px;
          padding: 1rem;
          max-height: 300px;
          overflow-y: auto;
          font-family: monospace;
          font-size: 0.875rem;
          white-space: pre-wrap;
        }
        .blob-list { display: grid; gap: 1rem; }
        .blob-item {
          border: 1px solid #e5e7eb;
          border-radius: 8px;
          padding: 1rem;
          background: white;
        }
        .blob-header {
          display: flex;
          justify-content: space-between;
          align-items: flex-start;
          margin-bottom: 0.5rem;
        }
        .blob-actions { display: flex; gap: 0.5rem; margin-top: 0.5rem; }
        .blob-actions button {
          font-size: 0.75rem;
          padding: 0.25rem 0.5rem;
          font-weight: normal;
        }
        .section-title {
          margin: 0 0 1rem 0;
          color: #374151;
          font-weight: 600;
        }
        .empty-state {
          text-align: center;
          padding: 2rem;
          color: #6b7280;
          font-style: italic;
        }
      </style><h1>WebSocket Demo (Modular Components)</h1><div class=demo-section><h2 class=section-title>Connection</h2><div class=controls><input type=text placeholder="WebSocket URL"><button class=primary>Connect</button><button>Disconnect</button></div><div><span class=status-indicator></span>Status: </div></div><div class=demo-section><h2 class=section-title>Actions</h2><div class=controls><button>Ping</button><button>Get Media Blobs</button><button>Upload Files</button><button>Clear Log</button><input type=file multiple></div></div><div class=demo-section><h2 class=section-title>Media Blobs (<!>)`),Te=w("<div class=empty-state>No media blobs yet. Upload a file or get blobs from server."),We=w("<div class=blob-item><div class=blob-header><div><strong></strong><br><small> • </small></div><div></div></div><div><small>Path: <br>Created: </small></div><div class=blob-actions><button>Download</button><button>View</button><button>Load Data"),Oe=w("<div>");const Re=$=>{const[e,t]=f(null),[i,o]=f("disconnected"),[s,a]=f(0),[k,ne]=f([]),[W,O]=f([]),[ae,le]=f(0),[R,q]=f("ws://localhost:8080/ws");te(()=>{const l=$.websocketUrl;l&&q(l)});let M;window.loadBlobData=l=>{e()?.loadBlobData(l)},te(()=>{const l=R(),r=new Ae(l,{logLevel:"info",autoGetMediaBlobs:!0});r.addEventListener("status-change",c=>{const{status:m,userCount:y}=c.detail;o(m),a(y||0)}),r.addEventListener("blobs-updated",c=>{ne(c.detail.blobs)}),r.addEventListener("blob-data-cached",()=>{le(c=>c+1)}),r.addEventListener("log",c=>{const{message:m,data:y}=c.detail.data,D=y?`${m}: ${JSON.stringify(y)}`:m;O(C=>[...C.slice(-49),D])}),t(r),$.autoConnect&&r.connect().catch(console.error),xe(()=>{r.destroy()})});const re=()=>{e()?.connect().catch(console.error)},de=()=>{e()?.disconnect()},ce=()=>{e()?.ping()},he=()=>{e()?.getMediaBlobs()},ue=l=>{const r=l.target,c=r.files;c&&c.length>0&&(e()?.uploadFiles(c),r.value="")},ge=()=>{M?.click()},be=(l,r)=>{e()?.downloadBlob(l,r)},pe=l=>{e()?.viewBlob(l)},me=l=>{e()?.loadBlobData(l)},N=()=>{O([]),e()?.clearEventLog()},ve=()=>{switch(i()){case"connected":return"#10b981";case"connecting":return"#f59e0b";case"error":return"#ef4444";default:return"#6b7280"}};return(()=>{var l=Pe(),r=l.firstChild,c=r.nextSibling,m=c.nextSibling,y=m.firstChild,D=y.nextSibling,C=D.firstChild,U=C.nextSibling,G=U.nextSibling,L=D.nextSibling,A=L.firstChild;A.nextSibling;var j=m.nextSibling,fe=j.firstChild,we=fe.nextSibling,F=we.firstChild,z=F.nextSibling,H=z.nextSibling,I=H.nextSibling,B=I.nextSibling,V=j.nextSibling,J=V.firstChild,$e=J.firstChild,K=$e.nextSibling;K.nextSibling,l.style.setProperty("padding","1rem"),l.style.setProperty("font-family","sans-serif"),C.$$input=n=>q(n.target.value),U.$$click=re,G.$$click=de,L.style.setProperty("margin-bottom","1rem"),d(L,i,null),d(L,S(_,{get when(){return s()>0},get children(){return[" ","(",ie(()=>s())," user",ie(()=>s()!==1?"s":"")," online)"]}}),null),F.$$click=ce,z.$$click=he,H.$$click=ge,I.$$click=N,B.addEventListener("change",ue);var Q=M;return typeof Q=="function"?_e(Q,B):M=B,B.style.setProperty("display","none"),d(J,()=>k().length,K),d(V,S(_,{get when(){return k().length>0},get fallback(){return Te()},get children(){var n=Fe();return d(n,S(oe,{get each(){return k()},children:h=>{const g=()=>(ae(),e()?.getBlobDisplayInfo(h));return(()=>{var v=We(),b=v.firstChild,u=b.firstChild,p=u.firstChild,x=p.nextSibling,E=x.nextSibling,ye=E.firstChild,Ce=u.nextSibling,X=b.nextSibling,P=X.firstChild,Ee=P.firstChild,Y=Ee.nextSibling;Y.nextSibling;var Se=X.nextSibling,Z=Se.firstChild,ee=Z.nextSibling,Be=ee.nextSibling;return d(p,()=>h.id),d(E,()=>g()?.mime,ye),d(E,()=>g()?.size,null),d(P,()=>h.local_path||"None",Y),d(P,()=>new Date(h.created_at).toLocaleString(),null),Z.$$click=()=>be(h.id,h.local_path),ee.$$click=()=>pe(h.id),Be.$$click=()=>me(h.id),T(()=>Ce.innerHTML=g()?.thumbnailHtml),v})()}})),n}}),null),d(l,S(_,{get when(){return $.showDebugLog},get children(){var n=He(),h=n.firstChild,g=h.nextSibling,v=g.firstChild,b=g.nextSibling;return v.$$click=N,d(b,S(oe,{get each(){return W()},children:u=>(()=>{var p=Oe();return d(p,u),p})()}),null),d(b,S(_,{get when(){return W().length===0},get children(){var u=ze();return u.style.setProperty("color","#6b7280"),u.style.setProperty("font-style","italic"),u}}),null),n}}),null),T(n=>{var h=i()==="connected"||i()==="connecting",g=i()==="connected"||i()==="connecting",v=i()==="disconnected",b=ve(),u=i()!=="connected",p=i()!=="connected",x=i()!=="connected",E=i()!=="connected";return h!==n.e&&(C.disabled=n.e=h),g!==n.t&&(U.disabled=n.t=g),v!==n.a&&(G.disabled=n.a=v),b!==n.o&&((n.o=b)!=null?A.style.setProperty("background-color",b):A.style.removeProperty("background-color")),u!==n.i&&(F.disabled=n.i=u),p!==n.n&&(z.disabled=n.n=p),x!==n.s&&(H.disabled=n.s=x),E!==n.h&&(B.disabled=n.h=E),n},{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0}),T(()=>C.value=R()),l})()};De("websocket-demo",{websocketUrl:"ws://localhost:8080/ws",autoConnect:!1,showDebugLog:!0},Re);Le(["input","click"]);
//# sourceMappingURL=websocket-demo.js.map
