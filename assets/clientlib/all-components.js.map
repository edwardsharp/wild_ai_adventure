{"version":3,"file":"all-components.js","sources":["../src/web-components/simple-test.tsx","../src/web-components/index.tsx"],"sourcesContent":["/* @jsxImportSource solid-js */\nimport { render } from \"solid-js/web\";\nimport { createSignal } from \"solid-js\";\n\nconsole.log(\"üöÄ Script started loading\");\n\nfunction SimpleTest() {\n  console.log(\"üì¶ SimpleTest component created\");\n  const [count, setCount] = createSignal(0);\n\n  return (\n    <div style={{ padding: \"20px\", border: \"1px solid #ccc\", margin: \"20px\" }}>\n      <h2>Simple Solid.js Test</h2>\n      <p>Count: {count()}</p>\n      <button onClick={() => setCount(count() + 1)}>Increment</button>\n    </div>\n  );\n}\n\n// Create a simple custom element manually without solid-element\nclass SimpleTestElement extends HTMLElement {\n  private dispose?: () => void;\n\n  connectedCallback() {\n    console.log(\"üîå SimpleTestElement connected\");\n    try {\n      this.dispose = render(() => <SimpleTest />, this);\n      console.log(\"‚úÖ Render successful\");\n    } catch (error) {\n      console.error(\"‚ùå Render failed:\", error);\n    }\n  }\n\n  disconnectedCallback() {\n    console.log(\"üîå SimpleTestElement disconnected\");\n    if (this.dispose) {\n      this.dispose();\n    }\n  }\n}\n\nconsole.log(\"üìù About to register custom element\");\n\ntry {\n  // Register the custom element\n  customElements.define(\"simple-test\", SimpleTestElement);\n  console.log(\"‚úÖ Custom element registered successfully\");\n} catch (error) {\n  console.error(\"‚ùå Failed to register custom element:\", error);\n}\n\nexport { SimpleTest, SimpleTestElement };\n","/**\n * Web Components Library - Entry Point\n *\n * This file exports all available web components for the clientlib.\n * Components are automatically registered as custom elements when imported.\n */\n\n/* @jsxImportSource solid-js */\n\n// WebAuthn Components\nexport { VERSION } from \"./webauthn-component\";\nexport type { WebAuthnAuthProps } from \"./webauthn-component\";\n\n// WebSocket Components\nimport { ConnectionStatus } from \"./websocket-status\";\nexport { ConnectionStatus };\nexport type { WebSocketHandlerProps } from \"./websocket-handler\";\nexport type { WebSocketStatusProps } from \"./websocket-status\";\n\n// Import components to ensure they register as custom elements\nimport \"./webauthn-component\";\nimport \"./websocket-handler\";\nimport \"./websocket-status\";\nimport \"./websocket-demo\";\nimport \"./simple-test\";\n\n// Component registration confirmation\nconst REGISTERED_COMPONENTS = [\n  \"webauthn-auth\",\n  \"websocket-handler\",\n  \"websocket-status\",\n  \"websocket-demo\",\n  \"simple-test\",\n] as const;\n\nexport { REGISTERED_COMPONENTS };\n\n// Global type declarations for TypeScript\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"webauthn-auth\": {\n        \"base-url\"?: string;\n        theme?: \"light\" | \"dark\";\n        \"auto-login\"?: boolean;\n      };\n      \"websocket-handler\": {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n      \"websocket-demo\": {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n\n      \"simple-test\": {\n        message?: string;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n\n// Custom events interface\nexport interface WebComponentEvents {\n  // WebAuthn events\n  \"webauthn-login\": CustomEvent<{ username: string; userId: string }>;\n  \"webauthn-logout\": CustomEvent<Record<string, never>>;\n  \"webauthn-error\": CustomEvent<{ error: string }>;\n  \"webauthn-status-change\": CustomEvent<{ isAuthenticated: boolean }>;\n\n  // WebSocket events\n  \"status-change\": CustomEvent<{\n    status: ConnectionStatus;\n    timestamp?: number;\n  }>;\n  \"media-blobs-received\": CustomEvent<{\n    blobs: unknown[];\n    totalCount?: number;\n  }>;\n  \"media-blob-received\": CustomEvent<{ blob: unknown }>;\n}\n\n// Helper function to add typed event listeners\nexport function addWebComponentListener<K extends keyof WebComponentEvents>(\n  element: Element,\n  type: K,\n  listener: (event: WebComponentEvents[K]) => void,\n  options?: boolean | AddEventListenerOptions\n): void {\n  element.addEventListener(type, listener as EventListener, options);\n}\n\n// Log that components are loaded\nconsole.log(\"üß© Web Components Library loaded - Available components:\", [\n  \"webauthn-auth\",\n  \"websocket-handler\",\n  \"websocket-status\",\n  \"websocket-demo\",\n  \"simple-test\",\n]);\n"],"names":["console","log","SimpleTest","count","setCount","createSignal","_el$","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_el$5","style","setProperty","_$insert","$$click","SimpleTestElement","HTMLElement","dispose","connectedCallback","render","_$createComponent","error","disconnectedCallback","customElements","define","_$delegateEvents"],"mappings":"mRAIAA,QAAQC,IAAI,2BAA2B,EAEvC,SAASC,GAAa,CACpBF,QAAQC,IAAI,iCAAiC,EAC7C,KAAM,CAACE,EAAOC,CAAQ,EAAIC,EAAa,CAAC,EAExC,OAAA,IAAA,CAAA,IAAAC,EAAAC,EAAAA,EAAAC,EAAAF,EAAAG,WAAAC,EAAAF,EAAAG,YAAAD,EAAAD,WAAAA,IAAAG,EAAAF,EAAAC,YAAAL,OAAAA,EAAAO,MAAAC,YAAA,UAAA,MAAA,EAAAR,EAAAO,MAAAC,YAAA,SAAA,gBAAA,EAAAR,EAAAO,MAAAC,YAAA,SAAA,MAAA,EAAAC,EAAAL,EAGeP,EAAK,IAAA,EAAAS,EAAAI,QACC,IAAMZ,EAASD,EAAAA,EAAU,CAAC,EAACG,CAAAA,GAAA,CAGlD,CAGA,MAAMW,UAA0BC,WAAY,CAClCC,QAERC,mBAAoB,CAClBpB,QAAQC,IAAI,gCAAgC,EAC5C,GAAI,CACF,KAAKkB,QAAUE,EAAO,IAAAC,EAAOpB,EAAU,CAAA,CAAA,EAAK,IAAI,EAChDF,QAAQC,IAAI,qBAAqB,CAAA,OAC1BsB,EAAO,CACdvB,QAAQuB,MAAM,mBAAoBA,CAAK,CAAA,CACzC,CAGFC,sBAAuB,CACrBxB,QAAQC,IAAI,mCAAmC,EAC3C,KAAKkB,SACP,KAAKA,QAAAA,CACP,CAEJ,CAEAnB,QAAQC,IAAI,qCAAqC,EAEjD,GAAI,CAEFwB,eAAeC,OAAO,cAAeT,CAAiB,EACtDjB,QAAQC,IAAI,0CAA0C,CACxD,OAASsB,EAAO,CACdvB,QAAQuB,MAAM,uCAAwCA,CAAK,CAC7D,CAEyCI,EAAA,CAAA,OAAA,CAAA,EC8CzC3B,QAAQC,IAAI,2DAA4D,CACtE,gBACA,oBACA,mBACA,iBACA,aAAa,CACd"}