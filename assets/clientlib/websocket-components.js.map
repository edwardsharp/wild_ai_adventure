{"version":3,"file":"websocket-components.js","sources":["../src/web-components/websocket-status.tsx","../src/web-components/websocket-handler.tsx"],"sourcesContent":["/**\n * WebSocket Connection Status Web Component\n *\n * A minimal web component that displays the current WebSocket connection status\n * with a colored indicator (red/yellow/green) and optional text.\n */\n\nimport { customElement } from 'solid-element';\nimport { createSignal, createEffect, Show } from 'solid-js';\n\nexport enum ConnectionStatus {\n  Disconnected = 'disconnected',\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Error = 'error',\n}\n\nexport interface WebSocketStatusProps {\n  status?: ConnectionStatus;\n  showText?: boolean;\n  userCount?: number;\n  showUserCount?: boolean;\n  compact?: boolean;\n}\n\nconst WebSocketStatus = (props: WebSocketStatusProps) => {\n  const [lastStatusChange, setLastStatusChange] = createSignal(Date.now());\n\n  // Create reactive getters with defaults\n  const status = () => props.status ?? ConnectionStatus.Disconnected;\n  const showText = () => props.showText ?? true;\n  const userCount = () => props.userCount ?? 0;\n  const showUserCount = () => props.showUserCount ?? false;\n  const compact = () => props.compact ?? false;\n\n  // Watch for status changes and dispatch events\n  createEffect(() => {\n    const currentStatus = status();\n    setLastStatusChange(Date.now());\n\n    // Dispatch custom event when status changes\n    const event = new CustomEvent('status-change', {\n      detail: {\n        status: currentStatus,\n        timestamp: lastStatusChange(),\n      },\n      bubbles: true,\n    });\n\n    // We'll dispatch this on the host element\n    setTimeout(() => {\n      const host = document.querySelector('websocket-status');\n      if (host) {\n        host.dispatchEvent(event);\n      }\n    }, 0);\n  });\n\n  const getStatusText = () => {\n    switch (status()) {\n      case ConnectionStatus.Disconnected:\n        return 'Offline';\n      case ConnectionStatus.Connecting:\n        return 'Connecting...';\n      case ConnectionStatus.Connected:\n        return 'Online';\n      case ConnectionStatus.Error:\n        return 'Connection Error';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getIndicatorClass = () => `status-indicator ${status()}`;\n  const getTextClass = () => `status-text ${status()}`;\n\n  return (\n    <div\n      style={{\n        display: 'inline-flex',\n        'align-items': 'center',\n        gap: '8px',\n        'font-family':\n          '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n        'font-size': '14px',\n      }}\n    >\n      <style>{`\n        .status-indicator {\n          width: 12px;\n          height: 12px;\n          border-radius: 50%;\n          border: 1px solid rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n\n        .status-indicator.disconnected {\n          background-color: #ef4444;\n          box-shadow: 0 0 4px rgba(239, 68, 68, 0.3);\n        }\n\n        .status-indicator.connecting {\n          background-color: #f59e0b;\n          box-shadow: 0 0 4px rgba(245, 158, 11, 0.3);\n          animation: pulse 1.5s infinite;\n        }\n\n        .status-indicator.connected {\n          background-color: #10b981;\n          box-shadow: 0 0 4px rgba(16, 185, 129, 0.3);\n        }\n\n        .status-indicator.error {\n          background-color: #dc2626;\n          box-shadow: 0 0 4px rgba(220, 38, 38, 0.5);\n          animation: blink 1s infinite;\n        }\n\n        @keyframes pulse {\n          0%, 100% {\n            opacity: 1;\n            transform: scale(1);\n          }\n          50% {\n            opacity: 0.7;\n            transform: scale(1.1);\n          }\n        }\n\n        @keyframes blink {\n          0%, 50% {\n            opacity: 1;\n          }\n          51%, 100% {\n            opacity: 0.3;\n          }\n        }\n\n        .status-text {\n          color: #374151;\n          font-weight: 500;\n        }\n\n        .status-text.disconnected {\n          color: #dc2626;\n        }\n\n        .status-text.connecting {\n          color: #d97706;\n        }\n\n        .status-text.connected {\n          color: #059669;\n        }\n\n        .status-text.error {\n          color: #dc2626;\n        }\n\n        .user-count {\n          color: #6b7280;\n          font-size: 12px;\n          margin-left: 4px;\n        }\n      `}</style>\n\n      <div class={getIndicatorClass()}></div>\n\n      <Show when={showText() && !compact()}>\n        <span class={getTextClass()}>{getStatusText()}</span>\n      </Show>\n\n      <Show when={showUserCount() && userCount() > 0 && !compact()}>\n        <span class='user-count'>\n          ({userCount()} user{userCount() !== 1 ? 's' : ''})\n        </span>\n      </Show>\n    </div>\n  );\n};\n\n// Register as custom element\ncustomElement(\n  'websocket-status',\n  {\n    status: ConnectionStatus.Disconnected,\n    showText: true,\n    userCount: 0,\n    showUserCount: false,\n    compact: false,\n  },\n  WebSocketStatus\n);\n\nexport { WebSocketStatus };\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'websocket-status': {\n        status?: ConnectionStatus;\n        showText?: boolean;\n        userCount?: number;\n        showUserCount?: boolean;\n        compact?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n","/**\n * WebSocket Message Handler Web Component\n *\n * A web component that manages WebSocket connections, handles incoming messages,\n * and provides methods for sending messages. Integrates with the WebSocket client\n * and provides a simple interface for media blob handling.\n */\n\nimport { customElement } from 'solid-element';\nimport { createSignal, createEffect, Show, For } from 'solid-js';\nimport { ConnectionStatus, WebSocketStatus } from './websocket-status';\nimport './websocket-status';\n\n// Import types from the clientlib\ninterface MediaBlob {\n  id: string;\n  data?: number[];\n  sha256: string;\n  size?: number;\n  mime?: string;\n  source_client_id?: string;\n  local_path?: string;\n  metadata: Record<string, unknown>;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface WebSocketMessage {\n  type: 'Ping' | 'GetMediaBlobs' | 'UploadMediaBlob' | 'GetMediaBlob';\n  data?: unknown;\n}\n\ninterface WebSocketResponse {\n  type:\n    | 'Welcome'\n    | 'Pong'\n    | 'MediaBlobs'\n    | 'MediaBlob'\n    | 'Error'\n    | 'ConnectionStatus';\n  data?: unknown;\n}\n\nexport interface WebSocketHandlerProps {\n  websocketUrl?: string;\n  autoConnect?: boolean;\n  showDebugLog?: boolean;\n}\n\nconst WebSocketHandler = (props: WebSocketHandlerProps) => {\n  // Props with defaults\n  const websocketUrl = () => props.websocketUrl ?? '';\n  const autoConnect = () => props.autoConnect ?? true;\n  const showDebugLog = () => props.showDebugLog ?? true;\n\n  // State\n  const [status, setStatus] = createSignal<ConnectionStatus>(\n    ConnectionStatus.Disconnected\n  );\n  const [socket, setSocket] = createSignal<WebSocket | null>(null);\n  const [debugLog, setDebugLog] = createSignal<string[]>([]);\n  const [mediaBlobs, setMediaBlobs] = createSignal<MediaBlob[]>([]);\n  const [errorMessage, setErrorMessage] = createSignal<string>('');\n  const [userCount, setUserCount] = createSignal<number>(0);\n  const [isDragOver, setIsDragOver] = createSignal<boolean>(false);\n  const [isUploading, setIsUploading] = createSignal<boolean>(false);\n  const [uploadProgress, setUploadProgress] = createSignal<string>('');\n\n  // Auto connect effect\n  createEffect(() => {\n    if (autoConnect() && websocketUrl()) {\n      connect();\n    }\n  });\n\n  const log = (message: string, ...args: unknown[]) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logEntry =\n      args.length > 0\n        ? `[${timestamp}] ${message}: ${JSON.stringify(args, null, 2)}`\n        : `[${timestamp}] ${message}`;\n\n    setDebugLog((prev) => [...prev.slice(-99), logEntry]); // Keep last 100 entries\n    console.log('[WebSocketHandler]', message, ...args);\n  };\n\n  const updateStatus = (newStatus: ConnectionStatus) => {\n    if (status() !== newStatus) {\n      setStatus(newStatus);\n      log(`Status changed to: ${newStatus}`);\n\n      // Dispatch status change event\n      const event = new CustomEvent('status-change', {\n        detail: { status: newStatus },\n        bubbles: true,\n      });\n\n      setTimeout(() => {\n        const host = document.querySelector('websocket-handler');\n        if (host) {\n          host.dispatchEvent(event);\n        }\n      }, 0);\n    }\n  };\n\n  const setError = (message: string) => {\n    setErrorMessage(message);\n    log(`Error: ${message}`);\n  };\n\n  const clearError = () => {\n    setErrorMessage('');\n  };\n\n  const connect = () => {\n    if (!websocketUrl()) {\n      setError('WebSocket URL not provided');\n      return;\n    }\n\n    if (socket()?.readyState === WebSocket.OPEN) {\n      log('Already connected');\n      return;\n    }\n\n    clearError();\n    updateStatus(ConnectionStatus.Connecting);\n    log(`Connecting to ${websocketUrl()}`);\n\n    try {\n      const newSocket = new WebSocket(websocketUrl());\n      setSocket(newSocket);\n      setupSocketListeners(newSocket);\n    } catch (error) {\n      setError(`Connection failed: ${error}`);\n      updateStatus(ConnectionStatus.Error);\n    }\n  };\n\n  const disconnect = () => {\n    log('Disconnecting...');\n\n    const currentSocket = socket();\n    if (currentSocket) {\n      currentSocket.close(1000, 'Client disconnect');\n      setSocket(null);\n    }\n\n    updateStatus(ConnectionStatus.Disconnected);\n  };\n\n  const setupSocketListeners = (ws: WebSocket) => {\n    ws.onopen = () => {\n      log('Connected successfully');\n      updateStatus(ConnectionStatus.Connected);\n      clearError();\n    };\n\n    ws.onclose = (event) => {\n      log('Connection closed', { code: event.code, reason: event.reason });\n      updateStatus(ConnectionStatus.Disconnected);\n    };\n\n    ws.onerror = (error) => {\n      log('Socket error', error);\n      updateStatus(ConnectionStatus.Error);\n      setError('Connection error occurred');\n    };\n\n    ws.onmessage = (event) => {\n      handleMessage(event.data);\n    };\n  };\n\n  const handleMessage = (rawMessage: string) => {\n    log('Received message');\n\n    try {\n      const response: WebSocketResponse = JSON.parse(rawMessage);\n      log('Parsed message type:', response.type);\n\n      switch (response.type) {\n        case 'Welcome':\n          log('Welcome received', response.data);\n          break;\n\n        case 'Pong':\n          log('Pong received');\n          break;\n\n        case 'MediaBlobs': {\n          const blobsData = response.data as {\n            blobs?: MediaBlob[];\n            total_count?: number;\n          };\n          log('Media blobs received:', {\n            count: blobsData?.blobs?.length || 0,\n            total_count: blobsData?.total_count,\n          });\n          setMediaBlobs(blobsData?.blobs || []);\n\n          // Dispatch event\n          const blobsEvent = new CustomEvent('media-blobs-received', {\n            detail: {\n              blobs: mediaBlobs(),\n              totalCount: blobsData?.total_count,\n            },\n            bubbles: true,\n          });\n          setTimeout(() => {\n            const host = document.querySelector('websocket-handler');\n            if (host) {\n              host.dispatchEvent(blobsEvent);\n            }\n          }, 0);\n          break;\n        }\n\n        case 'MediaBlob': {\n          const blobData = response.data as { blob?: MediaBlob };\n          log('Single media blob received:', {\n            id: blobData?.blob?.id,\n            size: blobData?.blob?.size,\n            mime: blobData?.blob?.mime,\n          });\n\n          // Dispatch event\n          const blobEvent = new CustomEvent('media-blob-received', {\n            detail: { blob: blobData?.blob },\n            bubbles: true,\n          });\n          setTimeout(() => {\n            const host = document.querySelector('websocket-handler');\n            if (host) {\n              host.dispatchEvent(blobEvent);\n            }\n          }, 0);\n          break;\n        }\n\n        case 'Error': {\n          log('Error message received', response.data);\n          const errorData = response.data as { message?: string };\n          setError(errorData?.message || 'Server error');\n          break;\n        }\n\n        case 'ConnectionStatus': {\n          log('Connection status update', response.data);\n          const statusData = response.data as { user_count?: number };\n          setUserCount(statusData?.user_count || 0);\n          break;\n        }\n\n        default:\n          log('Unknown message type:', response.type);\n      }\n    } catch (error) {\n      log('Failed to parse message', {\n        error: error instanceof Error ? error.toString() : String(error),\n        messageLength: rawMessage.length,\n      });\n      setError(`Message parse error: ${error}`);\n    }\n  };\n\n  const sendMessage = (message: WebSocketMessage): boolean => {\n    const currentSocket = socket();\n    if (!currentSocket || currentSocket.readyState !== WebSocket.OPEN) {\n      setError('Cannot send message: not connected');\n      return false;\n    }\n\n    try {\n      const json = JSON.stringify(message);\n      currentSocket.send(json);\n\n      // Log safe version of message without blob data\n      if (message.type === 'UploadMediaBlob') {\n        log('Sent UploadMediaBlob message', {\n          type: message.type,\n          blob_id: (message.data as any)?.blob?.id,\n          blob_size: (message.data as any)?.blob?.size,\n          blob_mime: (message.data as any)?.blob?.mime,\n          blob_sha256:\n            (message.data as any)?.blob?.sha256?.substring(0, 8) + '...',\n        });\n      } else {\n        log('Sent message', message);\n      }\n      return true;\n    } catch (error) {\n      setError(`Send error: ${error}`);\n      return false;\n    }\n  };\n\n  // Public API methods\n  const ping = () => sendMessage({ type: 'Ping' });\n\n  const getMediaBlobs = (limit?: number, offset?: number) =>\n    sendMessage({\n      type: 'GetMediaBlobs',\n      data: { limit, offset },\n    });\n\n  const getMediaBlob = (id: string) =>\n    sendMessage({\n      type: 'GetMediaBlob',\n      data: { id },\n    });\n\n  const uploadMediaBlob = (blob: MediaBlob) =>\n    sendMessage({\n      type: 'UploadMediaBlob',\n      data: { blob },\n    });\n\n  // File upload helpers\n  const calculateSHA256 = async (file: File): Promise<string> => {\n    const buffer = await file.arrayBuffer();\n    const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  };\n\n  const fileToBlob = async (file: File): Promise<MediaBlob> => {\n    const sha256 = await calculateSHA256(file);\n    const arrayBuffer = await file.arrayBuffer();\n    const data = Array.from(new Uint8Array(arrayBuffer));\n\n    return {\n      id: crypto.randomUUID(),\n      data,\n      sha256,\n      size: file.size,\n      mime: file.type || 'application/octet-stream',\n      source_client_id: 'web-component',\n      local_path: file.name,\n      metadata: {\n        originalName: file.name,\n        lastModified: file.lastModified,\n        uploadedAt: new Date().toISOString(),\n      },\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n  };\n\n  const uploadFile = async (file: File) => {\n    if (!file) return;\n\n    setIsUploading(true);\n    setUploadProgress(`Preparing ${file.name}...`);\n\n    try {\n      log(`Starting upload for file: ${file.name} (${file.size} bytes)`);\n\n      setUploadProgress('Calculating SHA256...');\n      const blob = await fileToBlob(file);\n\n      setUploadProgress('Uploading to server...');\n      log('Uploading blob:', {\n        id: blob.id,\n        size: blob.size,\n        mime: blob.mime,\n        sha256: blob.sha256.substring(0, 8) + '...',\n      });\n      const success = uploadMediaBlob(blob);\n\n      if (success) {\n        setUploadProgress(`✅ ${file.name} uploaded successfully!`);\n        log(`File upload successful: ${file.name}`);\n        setTimeout(() => setUploadProgress(''), 3000);\n      } else {\n        throw new Error('Failed to send upload message');\n      }\n    } catch (error) {\n      const errorMsg = `Upload failed: ${error instanceof Error ? error.message : String(error)}`;\n      setUploadProgress(`❌ ${errorMsg}`);\n      setError(errorMsg);\n      log('Upload error', error);\n      setTimeout(() => setUploadProgress(''), 5000);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleFileSelect = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    const files = input.files;\n    if (files && files.length > 0) {\n      Array.from(files).forEach(uploadFile);\n    }\n    // Reset input\n    input.value = '';\n  };\n\n  const handleDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (event: DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    const files = event.dataTransfer?.files;\n    if (files && files.length > 0) {\n      Array.from(files).forEach(uploadFile);\n    }\n  };\n\n  // Expose methods for external use\n  const exposeMethods = () => {\n    const element = document.querySelector('websocket-handler');\n    if (element) {\n      Object.assign(element, {\n        ping,\n        getMediaBlobs,\n        getMediaBlob,\n        uploadMediaBlob,\n        uploadFile,\n        connect,\n        disconnect,\n      });\n    }\n  };\n\n  // Expose methods after mount\n  createEffect(() => {\n    setTimeout(exposeMethods, 0);\n  });\n\n  const formatFileSize = (bytes?: number): string => {\n    if (!bytes) return 'Unknown size';\n    const units = ['B', 'KB', 'MB', 'GB'];\n    let size = bytes;\n    let unitIndex = 0;\n\n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  };\n\n  // Cleanup on unmount\n  createEffect(() => {\n    return disconnect;\n  });\n\n  return (\n    <div\n      style={{\n        display: 'block',\n        'font-family':\n          '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      }}\n    >\n      <style>{`\n        .container {\n          padding: 16px;\n          border: 1px solid #e5e7eb;\n          border-radius: 8px;\n          background: #f9fafb;\n        }\n\n        .header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 16px;\n        }\n\n        .title {\n          font-size: 18px;\n          font-weight: 600;\n          color: #111827;\n        }\n\n        .controls {\n          display: flex;\n          gap: 8px;\n        }\n\n        button {\n          padding: 6px 12px;\n          border: 1px solid #d1d5db;\n          border-radius: 6px;\n          background: white;\n          color: #374151;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        button:hover {\n          background: #f3f4f6;\n          border-color: #9ca3af;\n        }\n\n        button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        button.primary {\n          background: #3b82f6;\n          color: white;\n          border-color: #3b82f6;\n        }\n\n        button.primary:hover {\n          background: #2563eb;\n          border-color: #2563eb;\n        }\n\n        .status-section {\n          margin-bottom: 16px;\n        }\n\n        .debug-log {\n          background: #1f2937;\n          color: #f3f4f6;\n          padding: 12px;\n          border-radius: 6px;\n          font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n          font-size: 12px;\n          max-height: 300px;\n          overflow-y: auto;\n          white-space: pre-wrap;\n          word-break: break-all;\n        }\n\n        .media-blobs {\n          margin-top: 16px;\n        }\n\n        .media-blob {\n          padding: 12px;\n          border: 1px solid #e5e7eb;\n          border-radius: 6px;\n          margin-bottom: 8px;\n          background: white;\n        }\n\n        .media-blob-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 8px;\n        }\n\n        .media-blob-id {\n          font-family: monospace;\n          font-size: 12px;\n          color: #6b7280;\n        }\n\n        .media-blob-info {\n          font-size: 14px;\n          color: #374151;\n        }\n\n        .media-blob-meta {\n          font-size: 12px;\n          color: #6b7280;\n          margin-top: 4px;\n        }\n\n        .empty-state {\n          text-align: center;\n          color: #6b7280;\n          font-style: italic;\n          padding: 32px;\n        }\n\n        .error-message {\n          background: #fef2f2;\n          border: 1px solid #fecaca;\n          color: #dc2626;\n          padding: 12px;\n          border-radius: 6px;\n          margin-bottom: 16px;\n        }\n\n        .file-upload-section {\n          margin-top: 16px;\n          padding: 16px;\n          border: 2px dashed #d1d5db;\n          border-radius: 8px;\n          background: #f9fafb;\n          transition: all 0.2s;\n        }\n\n        .file-upload-section.drag-over {\n          border-color: #3b82f6;\n          background: #eff6ff;\n        }\n\n        .file-upload-section.uploading {\n          border-color: #10b981;\n          background: #ecfdf5;\n        }\n\n        .upload-controls {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 12px;\n        }\n\n        .file-input-wrapper {\n          position: relative;\n          overflow: hidden;\n          display: inline-block;\n        }\n\n        .file-input {\n          position: absolute;\n          left: -9999px;\n          opacity: 0;\n        }\n\n        .file-input-label {\n          display: inline-flex;\n          align-items: center;\n          gap: 8px;\n          padding: 10px 20px;\n          background: #3b82f6;\n          color: white;\n          border-radius: 6px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 500;\n          transition: background 0.2s;\n        }\n\n        .file-input-label:hover {\n          background: #2563eb;\n        }\n\n        .file-input-label:disabled {\n          background: #9ca3af;\n          cursor: not-allowed;\n        }\n\n        .upload-hint {\n          color: #6b7280;\n          font-size: 14px;\n          text-align: center;\n          margin: 8px 0;\n        }\n\n        .upload-progress {\n          color: #374151;\n          font-size: 14px;\n          font-weight: 500;\n          text-align: center;\n          padding: 8px;\n          background: #f3f4f6;\n          border-radius: 4px;\n          margin-top: 8px;\n        }\n\n        .upload-icon {\n          display: inline-block;\n          width: 16px;\n          height: 16px;\n        }\n      `}</style>\n\n      <div class='container'>\n        <div class='header'>\n          <h2 class='title'>WebSocket Handler</h2>\n          <div class='controls'>\n            <button\n              onClick={ping}\n              disabled={status() !== ConnectionStatus.Connected}\n            >\n              Ping\n            </button>\n            <button\n              onClick={() => getMediaBlobs()}\n              disabled={status() !== ConnectionStatus.Connected}\n            >\n              Get Media Blobs\n            </button>\n            <Show\n              when={status() === ConnectionStatus.Connected}\n              fallback={\n                <button onClick={connect} class='primary'>\n                  Connect\n                </button>\n              }\n            >\n              <button onClick={disconnect}>Disconnect</button>\n            </Show>\n          </div>\n        </div>\n\n        <div class='status-section'>\n          {WebSocketStatus({\n            status: status(),\n            userCount: userCount(),\n            showUserCount: true,\n            showText: true,\n            compact: false,\n          })}\n        </div>\n\n        <Show when={errorMessage()}>\n          <div class='error-message'>{errorMessage()}</div>\n        </Show>\n\n        <Show when={showDebugLog()}>\n          <div class='debug-log'>{debugLog().join('\\n')}</div>\n        </Show>\n\n        <Show when={status() === ConnectionStatus.Connected}>\n          <div\n            class={`file-upload-section ${isDragOver() ? 'drag-over' : ''} ${isUploading() ? 'uploading' : ''}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            <div class='upload-controls'>\n              <div class='file-input-wrapper'>\n                <input\n                  type='file'\n                  id='file-input'\n                  class='file-input'\n                  multiple\n                  onChange={handleFileSelect}\n                  disabled={isUploading()}\n                />\n                <label\n                  for='file-input'\n                  class={`file-input-label ${isUploading() ? 'disabled' : ''}`}\n                >\n                  <svg\n                    class='upload-icon'\n                    fill='none'\n                    stroke='currentColor'\n                    viewBox='0 0 24 24'\n                  >\n                    <path\n                      stroke-linecap='round'\n                      stroke-linejoin='round'\n                      stroke-width='2'\n                      d='M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12'\n                    ></path>\n                  </svg>\n                  {isUploading() ? 'Uploading...' : 'Choose Files'}\n                </label>\n              </div>\n\n              <div class='upload-hint'>\n                {isDragOver()\n                  ? 'Drop files here to upload'\n                  : 'Drag & drop files here or click to select'}\n              </div>\n\n              <Show when={uploadProgress()}>\n                <div class='upload-progress'>{uploadProgress()}</div>\n              </Show>\n            </div>\n          </div>\n        </Show>\n\n        <div class='media-blobs'>\n          <h3>Media Blobs ({mediaBlobs().length})</h3>\n          <Show\n            when={mediaBlobs().length > 0}\n            fallback={\n              <div class='empty-state'>\n                No media blobs received yet. Click \"Get Media Blobs\" to fetch\n                from server.\n              </div>\n            }\n          >\n            <For each={mediaBlobs()}>\n              {(blob) => (\n                <div class='media-blob'>\n                  <div class='media-blob-header'>\n                    <div class='media-blob-id'>{blob.id}</div>\n                    <div class='media-blob-info'>\n                      {blob.mime || 'Unknown type'} •{' '}\n                      {formatFileSize(blob.size)}\n                    </div>\n                  </div>\n                  <div class='media-blob-meta'>\n                    SHA256: {blob.sha256}\n                    <br />\n                    Client: {blob.source_client_id || 'Unknown'}\n                    <br />\n                    Path: {blob.local_path || 'None'}\n                    <br />\n                    Created: {new Date(blob.created_at).toLocaleString()}\n                    <Show when={Object.keys(blob.metadata).length > 0}>\n                      <br />\n                      Metadata: {JSON.stringify(blob.metadata)}\n                    </Show>\n                  </div>\n                </div>\n              )}\n            </For>\n          </Show>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Register as custom element\ncustomElement(\n  'websocket-handler',\n  {\n    websocketUrl: '',\n    autoConnect: true,\n    showDebugLog: true,\n  },\n  WebSocketHandler\n);\n\nexport { WebSocketHandler };\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'websocket-handler': {\n        websocketUrl?: string;\n        autoConnect?: boolean;\n        showDebugLog?: boolean;\n      };\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n"],"names":["ConnectionStatus","Disconnected","Connecting","Connected","Error","WebSocketStatus","props","lastStatusChange","setLastStatusChange","createSignal","Date","now","status","showText","userCount","showUserCount","compact","createEffect","currentStatus","event","CustomEvent","detail","timestamp","bubbles","setTimeout","host","document","querySelector","dispatchEvent","getStatusText","getIndicatorClass","getTextClass","_el$","_tmpl$3","_el$2","firstChild","_el$3","nextSibling","style","setProperty","_$insert","_$createComponent","Show","when","_$memo","children","_el$4","_tmpl$","_$effect","_$className","_el$5","_tmpl$2","_el$6","_el$9","_el$7","_el$0","customElement","WebSocketHandler","websocketUrl","autoConnect","showDebugLog","setStatus","socket","setSocket","debugLog","setDebugLog","mediaBlobs","setMediaBlobs","errorMessage","setErrorMessage","setUserCount","isDragOver","setIsDragOver","isUploading","setIsUploading","uploadProgress","setUploadProgress","connect","log","message","args","toLocaleTimeString","logEntry","length","JSON","stringify","prev","slice","console","updateStatus","newStatus","setError","clearError","readyState","WebSocket","OPEN","newSocket","setupSocketListeners","error","disconnect","currentSocket","close","ws","onopen","onclose","code","reason","onerror","onmessage","handleMessage","data","rawMessage","response","parse","type","blobsData","count","blobs","total_count","blobsEvent","totalCount","blobData","id","blob","size","mime","blobEvent","errorData","statusData","user_count","toString","String","messageLength","sendMessage","json","send","blob_id","blob_size","blob_mime","blob_sha256","sha256","substring","ping","getMediaBlobs","limit","offset","getMediaBlob","uploadMediaBlob","calculateSHA256","file","buffer","arrayBuffer","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","b","padStart","join","fileToBlob","randomUUID","source_client_id","local_path","name","metadata","originalName","lastModified","uploadedAt","toISOString","created_at","updated_at","uploadFile","errorMsg","handleFileSelect","input","target","files","forEach","value","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","exposeMethods","element","Object","assign","formatFileSize","bytes","units","unitIndex","toFixed","_tmpl$6","_el$8","_el$19","_el$20","_el$21","_el$23","$$click","fallback","_el$24","_tmpl$7","_el$1","_el$10","_el$11","_tmpl$5","_el$12","_el$13","_el$14","_el$15","_el$17","addEventListener","_el$18","_tmpl$4","_p$","_v$","_v$2","_v$3","e","t","disabled","a","undefined","_tmpl$8","For","each","_el$26","_tmpl$0","_el$27","_el$28","_el$29","_el$30","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","toLocaleString","keys","_tmpl$9","_v$4","_v$5","_$delegateEvents"],"mappings":"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"}