// WebAuthn Server Secrets Configuration Example
//
// ⚠️  EXAMPLE FILE FOR DOCUMENTATION ONLY ⚠️
// This file is safe to commit to source control because it contains
// only example values and placeholders.
//
// Copy this to config.secrets.jsonc and replace with real secrets:
//   cp config.secrets.example.jsonc config.secrets.jsonc
//
// Security Guidelines:
// - Never commit the actual config.secrets.jsonc file
// - Use strong, unique passwords for all services
// - Rotate secrets regularly in production
// - Restrict file permissions: chmod 600 config.secrets.jsonc
// - Keep separate secrets files for different environments
//
{
  // Database-related secrets
  "database": {
    // Database password for authentication
    // Replace with your actual database password
    "password": "REPLACE_WITH_SECURE_DATABASE_PASSWORD",

    // Optional: Complete database URL override
    // Use this if you need custom connection parameters
    "url_override": null,
    // Example with SSL and custom parameters:
    // "url_override": "postgresql://username:password@db-host:5432/dbname?sslmode=require&application_name=webauthn"
  },

  // Application secrets
  "app": {
    // Secret key for session encryption (minimum 32 characters)
    // Generate with: openssl rand -base64 32
    // Or use: https://generate-secret.vercel.app/32
    "session_secret": "REPLACE_WITH_RANDOM_32_PLUS_CHARACTER_SESSION_SECRET",

    // API keys for external services (add as needed)
    "api_keys": {
      // Email service API key
      // "sendgrid": "SG.REPLACE_WITH_SENDGRID_API_KEY",
      // Payment processing API key
      // "stripe": "sk_live_REPLACE_WITH_STRIPE_SECRET_KEY",
      // Version control API token
      // "github": "ghp_REPLACE_WITH_GITHUB_TOKEN",
      // Cloud storage API key
      // "aws_s3": "REPLACE_WITH_AWS_SECRET_ACCESS_KEY"
    },
  },

  // External service secrets
  "external": {
    // SMTP password for email notifications (future feature)
    "smtp_password": null,
    // Example:
    // "smtp_password": "REPLACE_WITH_SMTP_PASSWORD",

    // Other service credentials (add as needed)
    "services": {
      // Redis connection URL with authentication
      // "redis_url": "redis://username:password@redis-host:6379/0",
      // Object storage credentials
      // "s3_secret_key": "REPLACE_WITH_S3_SECRET_ACCESS_KEY",
      // JWT signing key for API tokens
      // "jwt_signing_key": "REPLACE_WITH_JWT_SECRET_KEY",
      // Third-party webhook secrets
      // "webhook_secret": "REPLACE_WITH_WEBHOOK_SECRET",
      // Monitoring service tokens
      // "sentry_dsn": "https://REPLACE_WITH_SENTRY_DSN@sentry.io/project-id"
    },
  },
}
