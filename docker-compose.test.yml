version: "3.8"

services:
  # Test PostgreSQL database
  webauthn-test-postgres:
    image: postgres:16-alpine
    container_name: webauthn-test-db
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      - webauthn_test_postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - webauthn-test-network

  # Redis for session storage (if needed)
  webauthn-test-redis:
    image: redis:7-alpine
    container_name: webauthn-test-redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - webauthn_test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - webauthn-test-network

  # Test runner container (optional - for running tests in isolated environment)
  webauthn-test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: webauthn-test-runner
    environment:
      DATABASE_URL: postgres://postgres:test_password_123@webauthn-test-postgres:5432/test_db
      REDIS_URL: redis://webauthn-test-redis:6379
      RUST_LOG: debug
      RUST_BACKTRACE: 1
    depends_on:
      webauthn-test-postgres:
        condition: service_healthy
      webauthn-test-redis:
        condition: service_healthy
    volumes:
      - .:/workspace
      - target_cache:/workspace/target
      - cargo_cache:/usr/local/cargo/registry
    working_dir: /workspace
    networks:
      - webauthn-test-network
    profiles:
      - test-container

  # Test database with specific version for compatibility testing
  webauthn-test-postgres-14:
    image: postgres:14-alpine
    container_name: webauthn-test-db-14
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5434:5432"
    volumes:
      - webauthn_test_postgres_14_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - webauthn-test-network
    profiles:
      - postgres-14

  # Integration test environment with Node.js for TypeScript client testing
  webauthn-typescript-test:
    image: node:20-alpine
    container_name: webauthn-ts-test
    environment:
      API_BASE_URL: http://webauthn-test-api:3000
      NODE_ENV: test
    volumes:
      - ./generated/ts-client:/app
      - webauthn_ts_node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run test:integration"
    depends_on:
      - webauthn-test-api
    networks:
      - webauthn-test-network
    profiles:
      - e2e

  # Test API server
  webauthn-test-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: webauthn-test-api
    environment:
      DATABASE_URL: postgres://postgres:test_password_123@webauthn-test-postgres:5432/test_db
      REDIS_URL: redis://webauthn-test-redis:6379
      RUST_LOG: info
      PORT: 3000
      CONFIG_PATH: config.test.jsonc
    ports:
      - "3001:3000"
    depends_on:
      webauthn-test-postgres:
        condition: service_healthy
    networks:
      - webauthn-test-network
    profiles:
      - e2e
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Performance testing with wrk
  webauthn-perf-test:
    image: williamyeh/wrk
    container_name: webauthn-perf-test
    command: >
      sh -c "
        echo 'Waiting for API to be ready...' &&
        sleep 10 &&
        echo 'Running performance tests...' &&
        wrk -t4 -c100 -d30s --timeout 10s http://webauthn-test-api:3000/health &&
        echo 'Health endpoint test completed' &&
        wrk -t2 -c10 -d10s --timeout 10s -s /scripts/register.lua http://webauthn-test-api:3000/
      "
    volumes:
      - ./scripts/perf:/scripts
    depends_on:
      - webauthn-test-api
    networks:
      - webauthn-test-network
    profiles:
      - perf

  # Prometheus for metrics collection during testing
  webauthn-test-prometheus:
    image: prom/prometheus:latest
    container_name: webauthn-test-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus-test.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=1h"
      - "--web.enable-lifecycle"
    networks:
      - webauthn-test-network
    profiles:
      - monitoring

volumes:
  webauthn_test_postgres_data:
    driver: local
  webauthn_test_postgres_14_data:
    driver: local
  webauthn_test_redis_data:
    driver: local
  webauthn_test_target_cache:
    driver: local
  webauthn_test_cargo_cache:
    driver: local
  webauthn_ts_node_modules:
    driver: local

networks:
  webauthn-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
